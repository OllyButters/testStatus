<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ds.asCharacter::smk" timestamp="2019-07-31 13:01:17" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.asCharacter::smk::turn the factor variable 'GENDER' into a character vector" timestamp="2019-07-31 13:01:23" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="6.38">
    <testcase time="6.38" classname="ds.asCharacter_smk_turn_the_factor_variable_GENDER_into_a_character_vector" name="_unnamed_">
      <error type="error" message="Command 'testObjExistsDS(&quot;gender_as_char&quot;)' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS (@test-smk-ds.asCharacter.R#27)">Command 'testObjExistsDS("gender_as_char")' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS
1: ds.asCharacter(x = "D$GENDER", newobj = "gender_as_char") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asCharacter.R:27
2: opal::datashield.aggregate(datasources, calltext) at /home/vsts/work/1/s/R/ds.asCharacter.R:67
3: datashield.aggregate.list(datasources, calltext)
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asList::smk" timestamp="2019-07-31 13:01:24" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.asList::smk::turn the data frame D into a list" timestamp="2019-07-31 13:01:30" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="6.26">
    <testcase time="6.26" classname="ds.asList_smk_turn_the_data_frame_D_into_a_list" name="_unnamed_">
      <error type="error" message="Command 'asListDS(&quot;D&quot;, &quot;D.list&quot;)' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: asListDS (@test-smk-ds.asList.R#27)">Command 'asListDS("D", "D.list")' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: asListDS
1: ds.asList(x = "D") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asList.R:27
2: opal::datashield.aggregate(datasources, calltext) at /home/vsts/work/1/s/R/ds.asList.R:53
3: datashield.aggregate.list(datasources, calltext)
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.assign::smk" timestamp="2019-07-31 13:01:30" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.assign::smk" timestamp="2019-07-31 13:01:36" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="0" time="6.61">
    <testcase time="6.61" classname="ds.assign_smk" name="test_assign"/>
  </testsuite>
  <testsuite name="ds.dataframe::smk" timestamp="2019-07-31 13:01:37" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.dataframe::smk::create a dataframe" timestamp="2019-07-31 13:01:43" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="7.66">
    <testcase time="7.66" classname="ds.dataframe_smk_create_a_dataframe" name="_unnamed_">
      <error type="error" message="The output object has not been generated for any of the studies! (@test-smk-ds.dataframe.R#18)">The output object has not been generated for any of the studies!
1: ds.dataframe(x = myvectors) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dataframe.R:18
2: isAssigned(datasources, newobj) at /home/vsts/work/1/s/R/ds.dataframe.R:103
3: stop("The output object has not been generated for any of the studies!", call. = FALSE) at /home/vsts/work/1/s/R/isAssigned.R:22</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dim:smk" timestamp="2019-07-31 13:01:44" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.dim::smk" timestamp="2019-07-31 13:01:50" hostname="fv-az668" tests="4" skipped="0" failures="0" errors="0" time="9.28">
    <testcase time="6.92" classname="ds.dim_smk" name="test_dim"/>
    <testcase time="0.82" classname="ds.dim_smk" name="test_dim"/>
    <testcase time="0.77" classname="ds.dim_smk" name="test_dim"/>
    <testcase time="0.77" classname="ds.dim_smk" name="test_dim"/>
  </testsuite>
  <testsuite name="ds.dim::smk::errors" timestamp="2019-07-31 13:01:53" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="1.28">
    <testcase time="0" classname="ds.dim_smk_errors" name="dim_errors"/>
    <testcase time="0.51" classname="ds.dim_smk_errors" name="dim_errors"/>
    <testcase time="0.77" classname="ds.dim_smk_errors" name="dim_errors"/>
  </testsuite>
  <testsuite name="ds.isNA::smk" timestamp="2019-07-31 13:01:55" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.isNA::smk" timestamp="2019-07-31 13:02:01" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="7.09">
    <testcase time="7.09" classname="ds.isNA_smk" name="isNA"/>
    <testcase time="0" classname="ds.isNA_smk" name="isNA"/>
    <testcase time="0" classname="ds.isNA_smk" name="isNA"/>
  </testsuite>
  <testsuite name="ds.isNA()::smk::errors" timestamp="2019-07-31 13:02:02" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="0" time="0.03">
    <testcase time="0.03" classname="ds.isNA_smk_errors" name="isNA_errors"/>
  </testsuite>
  <testsuite name="ds.length::smk" timestamp="2019-07-31 13:02:02" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.length::smk" timestamp="2019-07-31 13:02:08" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="8.33">
    <testcase time="6.72" classname="ds.length_smk" name="test_length"/>
    <testcase time="0.78" classname="ds.length_smk" name="test_length"/>
    <testcase time="0.83" classname="ds.length_smk" name="test_length"/>
  </testsuite>
  <testsuite name="ds.length::smk::errors" timestamp="2019-07-31 13:02:10" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="1.3">
    <testcase time="0" classname="ds.length_smk_errors" name="length_errors"/>
    <testcase time="0.54" classname="ds.length_smk_errors" name="length_errors"/>
    <testcase time="0.76" classname="ds.length_smk_errors" name="length_errors"/>
  </testsuite>
  <testsuite name="ds.list::smk" timestamp="2019-07-31 13:02:12" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.list::smk" timestamp="2019-07-31 13:02:18" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="0" time="8.15">
    <testcase time="8.15" classname="ds.list_smk" name="Is_List"/>
  </testsuite>
  <testsuite name="ds.list::smk::test errors" timestamp="2019-07-31 13:02:20" hostname="fv-az668" tests="2" skipped="0" failures="0" errors="0" time="0.02">
    <testcase time="0.02" classname="ds.list_smk_test_errors" name="list_erros"/>
    <testcase time="0" classname="ds.list_smk_test_errors" name="list_erros"/>
  </testsuite>
  <testsuite name="ds.meanByClass::smk" timestamp="2019-07-31 13:02:20" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.meanByClass::smk::calculate the mean proportion for LAB_HDL across gender categories" timestamp="2019-07-31 13:02:26" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="10.26">
    <testcase time="10.26" classname="ds.meanByClass_smk_calculate_the_mean_proportion_for_LAB_HDL_across_gender_categories" name="_unnamed_">
      <error type="error" message="Command 'meanDS(D.GENDER0$LAB_HDL)' failed on 'sim1': 'meanDS' is not an exported object from 'namespace:dsBase' (@test-smk-ds.meanByClass.R#27)">Command 'meanDS(D.GENDER0$LAB_HDL)' failed on 'sim1': 'meanDS' is not an exported object from 'namespace:dsBase'
1: ds.meanByClass(x = "D", outvar = "LAB_HDL", covar = "GENDER") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.meanByClass.R:27
2: meanByClassHelper0b(x, outvar, covar, type, datasources) at /home/vsts/work/1/s/R/ds.meanByClass.R:90
3: meanByClassHelper2(datasources, subsetnames, outvar, invalidrecorder) at /home/vsts/work/1/s/R/meanByClassHelper0b.R:73
4: getPooledMean(dtsources, paste0(tablename, "$", variables[z])) at /home/vsts/work/1/s/R/meanByClassHelper2.R:71
5: opal::datashield.aggregate(dtsources, as.symbol(cally)) at /home/vsts/work/1/s/R/getPooledMean.R:18
6: datashield.aggregate.list(dtsources, as.symbol(cally))
7: datashield.command_result(opal, res, wait = TRUE)
8: datashield.command_result.list(opal, res, wait = TRUE)
9: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
10: FUN(X[[i]], ...)
11: datashield.command_result(opal[[i]], id[[i]], wait = wait)
12: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
13: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean::smk" timestamp="2019-07-31 13:02:30" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.mean::smk::(type=combine)" timestamp="2019-07-31 13:02:36" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="6.67">
    <testcase time="6.67" classname="ds.mean_smk_type_combine_" name="_unnamed_">
      <error type="error" message="Command 'meanDS(D$LAB_TSC)' failed on 'sim1': 'meanDS' is not an exported object from 'namespace:dsBase' (@test-smk-ds.mean.R#28)">Command 'meanDS(D$LAB_TSC)' failed on 'sim1': 'meanDS' is not an exported object from 'namespace:dsBase'
1: ds.mean(x = "D$LAB_TSC") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.R:28
2: opal::datashield.aggregate(datasources, as.symbol(cally)) at /home/vsts/work/1/s/R/ds.mean.R:74
3: datashield.aggregate.list(datasources, as.symbol(cally))
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.names::smk" timestamp="2019-07-31 13:02:37" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.names::smk::test errors" timestamp="2019-07-31 13:02:43" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.names_smk_test_errors" name="_unnamed_">
      <error type="error" message="Command 'testObjExistsDS(&quot;not_a_list&quot;)' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS (@test-smk-ds.names.R#27)">Command 'testObjExistsDS("not_a_list")' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS
1: ds.asCharacter(x = "D$GENDER", newobj = "not_a_list") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.names.R:27
2: opal::datashield.aggregate(datasources, calltext) at /home/vsts/work/1/s/R/ds.asCharacter.R:67
3: datashield.aggregate.list(datasources, calltext)
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.quantileMean::smk" timestamp="2019-07-31 13:02:43" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.quantileMean::smk::standard" timestamp="2019-07-31 13:02:49" hostname="fv-az668" tests="2" skipped="0" failures="0" errors="0" time="7.28">
    <testcase time="7.28" classname="ds.quantileMean_smk_standard" name="quantileMean"/>
    <testcase time="0" classname="ds.quantileMean_smk_standard" name="quantileMean"/>
  </testsuite>
  <testsuite name="ds.quantileMean::smk::split" timestamp="2019-07-31 13:02:50" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="1.84">
    <testcase time="1.84" classname="ds.quantileMean_smk_split" name="quantileMean_split"/>
    <testcase time="0" classname="ds.quantileMean_smk_split" name="quantileMean_split"/>
    <testcase time="0" classname="ds.quantileMean_smk_split" name="quantileMean_split"/>
  </testsuite>
  <testsuite name="ds.quantileMean::smk::test errors" timestamp="2019-07-31 13:02:52" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="0.42">
    <testcase time="0.42" classname="ds.quantileMean_smk_test_errors" name="_unnamed_">
      <error type="error" message="Command 'testObjExistsDS(&quot;not_a_numeric&quot;)' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS (@test-smk-ds.quantileMean.R#36)">Command 'testObjExistsDS("not_a_numeric")' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS
1: ds.asCharacter(x = "D$LAB_HDL", newobj = "not_a_numeric") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.quantileMean.R:36
2: opal::datashield.aggregate(datasources, calltext) at /home/vsts/work/1/s/R/ds.asCharacter.R:67
3: datashield.aggregate.list(datasources, calltext)
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.recodeLevels::smk" timestamp="2019-07-31 13:02:53" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.rowColCalc::smk" timestamp="2019-07-31 13:02:58" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.rowColCalc::smk" timestamp="2019-07-31 13:03:04" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="16.23">
    <testcase time="16.23" classname="ds.rowColCalc_smk" name="rowColCalc_exists"/>
    <testcase time="0" classname="ds.rowColCalc_smk" name="rowColCalc_exists"/>
    <testcase time="0" classname="ds.rowColCalc_smk" name="rowColCalc_exists"/>
  </testsuite>
  <testsuite name="ds.rowColCalc::smk::no newobj" timestamp="2019-07-31 13:03:09" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="4.32">
    <testcase time="4.32" classname="ds.rowColCalc_smk_no_newobj" name="rowColCalc_out_exists"/>
    <testcase time="0" classname="ds.rowColCalc_smk_no_newobj" name="rowColCalc_out_exists"/>
    <testcase time="0" classname="ds.rowColCalc_smk_no_newobj" name="rowColCalc_out_exists"/>
  </testsuite>
  <testsuite name="ds.rowColCalc::smk::test errors" timestamp="2019-07-31 13:03:13" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="6.62">
    <testcase time="0" classname="ds.rowColCalc_smk_test_errors" name="rowColCalc_errors"/>
    <testcase time="3.31" classname="ds.rowColCalc_smk_test_errors" name="rowColCalc_errors"/>
    <testcase time="3.31" classname="ds.rowColCalc_smk_test_errors" name="rowColCalc_errors"/>
  </testsuite>
  <testsuite name="ds.subset::smk" timestamp="2019-07-31 13:03:20" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.subset::smk::generate a subset of the assigned table (by default the table is named 'D') with the first 50 observations and the two first columns refered to by their names" timestamp="2019-07-31 13:03:26" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="8.29">
    <testcase time="8.29" classname="ds.subset_smk_generate_a_subset_of_the_assigned_table_by_default_the_table_is_named_D_with_the_first_50_observations_and_the_two_first_columns_refered_to_by_their_names" name="subD2_exists"/>
    <testcase time="0" classname="ds.subset_smk_generate_a_subset_of_the_assigned_table_by_default_the_table_is_named_D_with_the_first_50_observations_and_the_two_first_columns_refered_to_by_their_names" name="subD2_exists"/>
    <testcase time="0" classname="ds.subset_smk_generate_a_subset_of_the_assigned_table_by_default_the_table_is_named_D_with_the_first_50_observations_and_the_two_first_columns_refered_to_by_their_names" name="subD2_exists"/>
  </testsuite>
  <testsuite name="ds.summary::smk" timestamp="2019-07-31 13:03:28" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.summary::smk::summary of a numerical variable" timestamp="2019-07-31 13:03:34" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="8.81">
    <testcase time="8.81" classname="ds.summary_smk_summary_of_a_numerical_variable" name="summary_numerical_variable"/>
    <testcase time="0" classname="ds.summary_smk_summary_of_a_numerical_variable" name="summary_numerical_variable"/>
    <testcase time="0" classname="ds.summary_smk_summary_of_a_numerical_variable" name="summary_numerical_variable"/>
  </testsuite>
  <testsuite name="ds.summary::smk::summary of a character variable" timestamp="2019-07-31 13:03:37" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="0.4">
    <testcase time="0.4" classname="ds.summary_smk_summary_of_a_character_variable" name="_unnamed_">
      <error type="error" message="Command 'testObjExistsDS(&quot;a_character&quot;)' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS (@test-smk-ds.summary.R#21)">Command 'testObjExistsDS("a_character")' failed on 'sim1': No such DataSHIELD 'AGGREGATE' method with name: testObjExistsDS
1: ds.asCharacter(x = "D$GENDER", newobj = "a_character") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.summary.R:21
2: opal::datashield.aggregate(datasources, calltext) at /home/vsts/work/1/s/R/ds.asCharacter.R:67
3: datashield.aggregate.list(datasources, calltext)
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.table1D::smk" timestamp="2019-07-31 13:03:37" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.table1D::smk::generate a one dimensional table, outputting combined contingency tables" timestamp="2019-07-31 13:03:43" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="6.8">
    <testcase time="6.8" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_combined_contingency_tables" name="GENDER_normal"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_combined_contingency_tables" name="GENDER_normal"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_combined_contingency_tables" name="GENDER_normal"/>
  </testsuite>
  <testsuite name="ds.table1D::smk::generate a one dimensional table, outputting combined contingency tables fail" timestamp="2019-07-31 13:03:44" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="0" time="0.81">
    <testcase time="0.81" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_combined_contingency_tables_fail" name="DIS_CVA_invalid"/>
  </testsuite>
  <testsuite name="ds.table1D::smk::generate a one dimensional table, outputting combined contingency tables fail split" timestamp="2019-07-31 13:03:45" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="0" time="0.76">
    <testcase time="0.76" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_combined_contingency_tables_fail_split" name="DIS_CVA_invalid_split"/>
  </testsuite>
  <testsuite name="ds.table1D::smk::generate a one dimensional table, outputting study specific contingency tables" timestamp="2019-07-31 13:03:46" hostname="fv-az668" tests="4" skipped="0" failures="0" errors="0" time="0.76">
    <testcase time="0.76" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables" name="GENDER_split"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables" name="GENDER_split"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables" name="GENDER_split"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables" name="GENDER_split"/>
  </testsuite>
  <testsuite name="ds.table1D::smk::generate a one dimensional table, outputting study specific contingency tables for study 1 and 2" timestamp="2019-07-31 13:03:46" hostname="fv-az668" tests="4" skipped="0" failures="0" errors="0" time="0.73">
    <testcase time="0.73" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables_for_study_1_and_2" name="GENDER_split_12"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables_for_study_1_and_2" name="GENDER_split_12"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables_for_study_1_and_2" name="GENDER_split_12"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_contingency_tables_for_study_1_and_2" name="GENDER_split_12"/>
  </testsuite>
  <testsuite name="ds.table1D::smk::generate a one dimensional table, outputting study specific and combined contingency tables" timestamp="2019-07-31 13:03:47" hostname="fv-az668" tests="3" skipped="0" failures="0" errors="0" time="0.76">
    <testcase time="0.76" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_and_combined_contingency_tables" name="GENDER_normal_2"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_and_combined_contingency_tables" name="GENDER_normal_2"/>
    <testcase time="0" classname="ds.table1D_smk_generate_a_one_dimensional_table_outputting_study_specific_and_combined_contingency_tables" name="GENDER_normal_2"/>
  </testsuite>
  <testsuite name="ds.table1D::smk::test errors" timestamp="2019-07-31 13:03:48" hostname="fv-az668" tests="2" skipped="0" failures="0" errors="0" time="0.76">
    <testcase time="0" classname="ds.table1D_smk_test_errors" name="table1D_erros"/>
    <testcase time="0.76" classname="ds.table1D_smk_test_errors" name="table1D_erros"/>
  </testsuite>
  <testsuite name="ds.table2D::smk" timestamp="2019-07-31 13:03:49" hostname="fv-az668" tests="0" skipped="0" failures="0" errors="0" time="0"/>
  <testsuite name="ds.table2D::smk::generate a two dimensional table, outputting combined contingency tables - default behaviour" timestamp="2019-07-31 13:03:55" hostname="fv-az668" tests="1" skipped="0" failures="0" errors="1" time="7.29">
    <testcase time="7.29" classname="ds.table2D_smk_generate_a_two_dimensional_table_outputting_combined_contingency_tables_default_behaviour" name="_unnamed_">
      <error type="error" message="Command 'table2dDS(D$DIS_DIAB,D$GENDER)' failed on 'sim1': 'table2dDS' is not an exported object from 'namespace:dsBase' (@test-smk-ds.table2D.R#27)">Command 'table2dDS(D$DIS_DIAB,D$GENDER)' failed on 'sim1': 'table2dDS' is not an exported object from 'namespace:dsBase'
1: ds.table2D(datasources = ds.test_env$connection.opal, x = "D$DIS_DIAB", y = "D$GENDER") at /home/vsts/work/1/s/tests/testthat/test-smk-ds.table2D.R:27
2: opal::datashield.aggregate(datasources, as.symbol(cally)) at /home/vsts/work/1/s/R/ds.table2D.R:133
3: datashield.aggregate.list(datasources, as.symbol(cally))
4: datashield.command_result(opal, res, wait = TRUE)
5: datashield.command_result.list(opal, res, wait = TRUE)
6: lapply(1:length(opal), function(i) {
       datashield.command_result(opal[[i]], id[[i]], wait = wait)
   })
7: FUN(X[[i]], ...)
8: datashield.command_result(opal[[i]], id[[i]], wait = wait)
9: datashield.command_result.opal(opal[[i]], id[[i]], wait = wait)
10: stop("Command '", cmd$script, "' failed on '", opal$name, "': ", msg, call. = FALSE)</error>
    </testcase>
  </testsuite>
</testsuites>
