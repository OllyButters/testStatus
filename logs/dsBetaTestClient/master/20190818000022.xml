<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="ds.asCharacter.o::arg::test errors" timestamp="2019-08-18 00:38:54" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.45">
    <testcase time="6.45" classname="ds.asCharacter.o_arg_test_errors" name="asCharacter_erros">
      <failure type="failure" message="`ds.asCharacter.o()` threw an error with unexpected message. (@test-arg-ds.asCharacter.o.R#29)">`ds.asCharacter.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asCharacter.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asDataMatrix.o::arg::test errors" timestamp="2019-08-18 00:39:01" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.43">
    <testcase time="6.43" classname="ds.asDataMatrix.o_arg_test_errors" name="asDataMatrix_erros">
      <failure type="failure" message="`ds.asDataMatrix.o()` threw an error with unexpected message. (@test-arg-ds.asDataMatrix.o.R#29)">`ds.asDataMatrix.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asDataMatrix.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asFactor.o::arg::test errors" timestamp="2019-08-18 00:39:07" hostname="fv-az679" tests="3" skipped="0" failures="3" errors="0" time="6.53">
    <testcase time="6.52" classname="ds.asFactor.o_arg_test_errors" name="asFactor_erros">
      <failure type="failure" message="`ds.asFactor.o()` threw an error with unexpected message. (@test-arg-ds.asFactor.o.R#29)">`ds.asFactor.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the variable that is to be converted to a factor e.g. 'varname'"
Actual message: "could not find function \"ds.asFactor.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.asFactor.o_arg_test_errors" name="asFactor_erros">
      <failure type="failure" message="`ds.asFactor.o(input.var.name = 1)` threw an error with unexpected message. (@test-arg-ds.asFactor.o.R#30)">`ds.asFactor.o(input.var.name = 1)` threw an error with unexpected message.
Expected match: "Please provide the name of the variable that is to be converted to a factor in character format e.g. 'varname'"
Actual message: "could not find function \"ds.asFactor.o\""</failure>
    </testcase>
    <testcase time="0.01" classname="ds.asFactor.o_arg_test_errors" name="asFactor_erros">
      <failure type="failure" message="`ds.asFactor.o(input.var.name = NA)` threw an error with unexpected message. (@test-arg-ds.asFactor.o.R#31)">`ds.asFactor.o(input.var.name = NA)` threw an error with unexpected message.
Expected match: "Please provide the name of the variable that is to be converted to a factor in character format e.g. 'varname'"
Actual message: "could not find function \"ds.asFactor.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asInteger.o::arg::test errors" timestamp="2019-08-18 00:39:14" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.43">
    <testcase time="6.43" classname="ds.asInteger.o_arg_test_errors" name="asInteger_erros">
      <failure type="failure" message="`ds.asInteger.o()` threw an error with unexpected message. (@test-arg-ds.asInteger.o.R#29)">`ds.asInteger.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asInteger.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asList.o::arg::test errors" timestamp="2019-08-18 00:39:20" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.41">
    <testcase time="6.41" classname="ds.asList.o_arg_test_errors" name="asList_erros">
      <failure type="failure" message="`ds.asList.o()` threw an error with unexpected message. (@test-arg-ds.asList.o.R#29)">`ds.asList.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asList.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asLogical.o::arg::test errors" timestamp="2019-08-18 00:39:27" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.43">
    <testcase time="6.43" classname="ds.asLogical.o_arg_test_errors" name="asLogical_erros">
      <failure type="failure" message="`ds.asLogical.o()` threw an error with unexpected message. (@test-arg-ds.asLogical.o.R#29)">`ds.asLogical.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asLogical.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asMatrix.o::arg::test errors" timestamp="2019-08-18 00:39:33" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.52">
    <testcase time="6.52" classname="ds.asMatrix.o_arg_test_errors" name="asMatrix_erros">
      <failure type="failure" message="`ds.asMatrix.o()` threw an error with unexpected message. (@test-arg-ds.asMatrix.o.R#29)">`ds.asMatrix.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asMatrix.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.asNumeric.o::arg::test errors" timestamp="2019-08-18 00:39:40" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.43">
    <testcase time="6.43" classname="ds.asNumeric.o_arg_test_errors" name="asNumeric_erros">
      <failure type="failure" message="`ds.asNumeric.o()` threw an error with unexpected message. (@test-arg-ds.asNumeric.o.R#29)">`ds.asNumeric.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.asNumeric.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.Boole.o::arg::test errors" timestamp="2019-08-18 00:39:46" hostname="fv-az679" tests="4" skipped="0" failures="4" errors="0" time="6.4">
    <testcase time="6.4" classname="ds.Boole.o_arg_test_errors" name="Boole_erros">
      <failure type="failure" message="`ds.Boole.o()` threw an error with unexpected message. (@test-arg-ds.Boole.o.R#29)">`ds.Boole.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the column or scalar that holds V1!"
Actual message: "could not find function \"ds.Boole.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.Boole.o_arg_test_errors" name="Boole_erros">
      <failure type="failure" message="`ds.Boole.o(V1 = &quot;D$LAB_TSC&quot;)` threw an error with unexpected message. (@test-arg-ds.Boole.o.R#30)">`ds.Boole.o(V1 = "D$LAB_TSC")` threw an error with unexpected message.
Expected match: "Please provide the name of a column or scalar holding V2 or declare a scalar in character format: eg '3'"
Actual message: "could not find function \"ds.Boole.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.Boole.o_arg_test_errors" name="Boole_erros">
      <failure type="failure" message="`ds.Boole.o(V1 = &quot;D$LAB_TSC&quot;, V2 = &quot;LAB_TRIG&quot;)` threw an error with unexpected message. (@test-arg-ds.Boole.o.R#31)">`ds.Boole.o(V1 = "D$LAB_TSC", V2 = "LAB_TRIG")` threw an error with unexpected message.
Expected match: "Please provide a Boolean operator in character format: eg '==' or '&gt;=' or '&lt;' or '!='"
Actual message: "could not find function \"ds.Boole.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.Boole.o_arg_test_errors" name="Boole_erros">
      <failure type="failure" message="`ds.Boole.o(...)` threw an error with unexpected message. (@test-arg-ds.Boole.o.R#32)">`ds.Boole.o(...)` threw an error with unexpected message.
Expected match: "Error: na.assign must be a character string taking value 'NA', '0' or '1'- if &lt;na.action&gt; not specified default is 'NA'"
Actual message: "could not find function \"ds.Boole.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.cbind.o::arg::test errors" timestamp="2019-08-18 00:39:52" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.cbind.o_arg_test_errors" name="cbind_erros">
      <error type="error" message="could not find function &quot;ds.asList.o&quot; (@test-arg-ds.cbind.o.R#29)">could not find function "ds.asList.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asList.o\"", base::quote(ds.asList.o(x = "D$LAB_TSC", 
       newobj = "as_list"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.cbind.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.cor.o::arg::test errors" timestamp="2019-08-18 00:39:59" hostname="fv-az679" tests="3" skipped="0" failures="3" errors="0" time="6.47">
    <testcase time="6.47" classname="ds.cor.o_arg_test_errors" name="cor_erros">
      <failure type="failure" message="`ds.cor.o()` threw an error with unexpected message. (@test-arg-ds.cor.o.R#29)">`ds.cor.o()` threw an error with unexpected message.
Expected match: "x=NULL. Please provide the name of a matrix or dataframe or the names of two numeric vectors!"
Actual message: "could not find function \"ds.cor.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.cor.o_arg_test_errors" name="cor_erros">
      <failure type="failure" message="`ds.cor.o(x = &quot;D$LAB_TSC&quot;)` threw an error with unexpected message. (@test-arg-ds.cor.o.R#30)">`ds.cor.o(x = "D$LAB_TSC")` threw an error with unexpected message.
Expected match: "If x is a numeric vector, y must be a numeric vector!"
Actual message: "could not find function \"ds.cor.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.cor.o_arg_test_errors" name="cor_erros">
      <failure type="failure" message="`ds.cor.o(x = &quot;D$LAB_TSC&quot;, y = &quot;D$LAB_TRIG&quot;, type = &quot;datashield&quot;)` threw an error with unexpected message. (@test-arg-ds.cor.o.R#31)">`ds.cor.o(x = "D$LAB_TSC", y = "D$LAB_TRIG", type = "datashield")` threw an error with unexpected message.
Expected match: "Function argument \"type\" has to be either \"combine\" or \"split\""
Actual message: "could not find function \"ds.cor.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.cov.o::arg::test errors" timestamp="2019-08-18 00:40:05" hostname="fv-az679" tests="3" skipped="0" failures="3" errors="0" time="6.47">
    <testcase time="6.47" classname="ds.cov.o_arg_test_errors" name="cov_erros">
      <failure type="failure" message="`ds.cov.o()` threw an error with unexpected message. (@test-arg-ds.cov.o.R#29)">`ds.cov.o()` threw an error with unexpected message.
Expected match: "x=NULL. Please provide the name of a matrix or dataframe or the names of two numeric vectors!"
Actual message: "could not find function \"ds.cov.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.cov.o_arg_test_errors" name="cov_erros">
      <failure type="failure" message="`ds.cov.o(x = &quot;D$LAB_TSC&quot;)` threw an error with unexpected message. (@test-arg-ds.cov.o.R#30)">`ds.cov.o(x = "D$LAB_TSC")` threw an error with unexpected message.
Expected match: "If x is a numeric vector, y must be a numeric vector!"
Actual message: "could not find function \"ds.cov.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.cov.o_arg_test_errors" name="cov_erros">
      <failure type="failure" message="`ds.cov.o(x = &quot;D$LAB_TSC&quot;, y = &quot;D$LAB_TRIG&quot;, type = &quot;datashield&quot;)` threw an error with unexpected message. (@test-arg-ds.cov.o.R#31)">`ds.cov.o(x = "D$LAB_TSC", y = "D$LAB_TRIG", type = "datashield")` threw an error with unexpected message.
Expected match: "Function argument \"type\" has to be either \"combine\" or \"split\""
Actual message: "could not find function \"ds.cov.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o::arg::test errors" timestamp="2019-08-18 00:40:12" hostname="fv-az679" tests="2" skipped="0" failures="1" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.dataFrame.o_arg_test_errors" name="dataFrame_erros">
      <failure type="failure" message="`ds.dataFrame.o()` threw an error with unexpected message. (@test-arg-ds.dataFrame.o.R#29)">`ds.dataFrame.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the list that holds the input vectors!"
Actual message: "could not find function \"ds.dataFrame.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.dataFrame.o_arg_test_errors" name="dataFrame_erros">
      <error type="error" message="could not find function &quot;ds.asList.o&quot; (@test-arg-ds.dataFrame.o.R#31)">could not find function "ds.asList.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asList.o\"", base::quote(ds.asList.o(x = "D$A", 
       newobj = "as_list"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.dataFrame.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrameSubset.o::arg::test errors" timestamp="2019-08-18 00:40:18" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.41">
    <testcase time="6.41" classname="ds.dataFrameSubset.o_arg_test_errors" name="dataFrameSubset_erros">
      <failure type="failure" message="`ds.dataFrameSubset.o()` threw an error with unexpected message. (@test-arg-ds.dataFrameSubset.o.R#29)">`ds.dataFrameSubset.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the data.frame to be subsetted as a character string: eg 'xxx'"
Actual message: "could not find function \"ds.dataFrameSubset.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.dim.o::arg::test errors" timestamp="2019-08-18 00:40:25" hostname="fv-az679" tests="3" skipped="0" failures="3" errors="0" time="6.43">
    <testcase time="6.43" classname="ds.dim.o_arg_test_errors" name="dim_erros">
      <failure type="failure" message="`ds.dim.o()` threw an error with unexpected message. (@test-arg-ds.dim.o.R#29)">`ds.dim.o()` threw an error with unexpected message.
Expected match: "Please provide a the name of a data.frame or matrix!"
Actual message: "could not find function \"ds.dim.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.dim.o_arg_test_errors" name="dim_erros">
      <failure type="failure" message="`ds.dim.o(x = &quot;F&quot;, checks = TRUE)` threw an error with unexpected message. (@test-arg-ds.dim.o.R#30)">`ds.dim.o(x = "F", checks = TRUE)` threw an error with unexpected message.
Expected match: "The input object must be a table structure!"
Actual message: "could not find function \"ds.dim.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.dim.o_arg_test_errors" name="dim_erros">
      <failure type="failure" message="`ds.dim.o(x = &quot;D&quot;, type = &quot;other&quot;)` threw an error with unexpected message. (@test-arg-ds.dim.o.R#31)">`ds.dim.o(x = "D", type = "other")` threw an error with unexpected message.
Expected match: "Function argument \"type\" has to be either \"both\", \"combine\" or \"split\""
Actual message: "could not find function \"ds.dim.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.foobar.o::arg::aggregate" timestamp="2019-08-18 00:40:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="0" time="6.4">
    <testcase time="6.4" classname="ds.foobar.o_arg_aggregate" name="NULL_opal"/>
  </testsuite>
  <testsuite name="ds.foobar.o::arg::aggregate" timestamp="2019-08-18 00:40:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="ds.foobar.o_arg_aggregate" name="NULL_expr"/>
  </testsuite>
  <testsuite name="ds.foobar.o::arg::aggregate" timestamp="2019-08-18 00:40:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="0" time="0.19">
    <testcase time="0.19" classname="ds.foobar.o_arg_aggregate" name="non_existent_aggregate_foobarDS"/>
  </testsuite>
  <testsuite name="ds.foobar.o::arg::assign" timestamp="2019-08-18 00:40:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="ds.foobar.o_arg_assign" name="NULL_opal"/>
  </testsuite>
  <testsuite name="ds.foobar.o::arg::assign" timestamp="2019-08-18 00:40:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="0" time="0">
    <testcase time="0" classname="ds.foobar.o_arg_assign" name="NULL_value"/>
  </testsuite>
  <testsuite name="ds.foobar.o::arg::assign" timestamp="2019-08-18 00:40:31" hostname="fv-az679" tests="2" skipped="0" failures="0" errors="0" time="0.24">
    <testcase time="0.24" classname="ds.foobar.o_arg_assign" name="non_existent_assign_foobarDS"/>
    <testcase time="0" classname="ds.foobar.o_arg_assign" name="non_existent_assign_foobarDS"/>
  </testsuite>
  <testsuite name="ds.glm.o::arg::test errors" timestamp="2019-08-18 00:40:38" hostname="fv-az679" tests="2" skipped="0" failures="2" errors="0" time="6.42">
    <testcase time="6.42" classname="ds.glm.o_arg_test_errors" name="glm_erros">
      <failure type="failure" message="`ds.glm.o()` threw an error with unexpected message. (@test-arg-ds.glm.o.R#29)">`ds.glm.o()` threw an error with unexpected message.
Expected match: " Please provide a valid regression formula!"
Actual message: "could not find function \"ds.glm.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.glm.o_arg_test_errors" name="glm_erros">
      <failure type="failure" message="`ds.glm.o(&quot;D$LAB_TSC~D$LAB_TSC&quot;)` threw an error with unexpected message. (@test-arg-ds.glm.o.R#30)">`ds.glm.o("D$LAB_TSC~D$LAB_TSC")` threw an error with unexpected message.
Expected match: " Please provide a valid 'family' argument!"
Actual message: "could not find function \"ds.glm.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.glmSLMA.o::arg::test errors" timestamp="2019-08-18 00:40:44" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.32">
    <testcase time="6.32" classname="ds.glmSLMA.o_arg_test_errors" name="glmSLMA_erros">
      <failure type="failure" message="`ds.glmSLMA.o()` threw an error with unexpected message. (@test-arg-ds.glmSLMA.o.R#29)">`ds.glmSLMA.o()` threw an error with unexpected message.
Expected match: " Please provide a valid regression formula!"
Actual message: "could not find function \"ds.glmSLMA.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.length.o::arg::test errors" timestamp="2019-08-18 00:40:51" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.length.o_arg_test_errors" name="length_erros">
      <error type="error" message="could not find function &quot;ds.asMatrix.o&quot; (@test-arg-ds.length.o.R#29)">could not find function "ds.asMatrix.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asMatrix.o\"", base::quote(ds.asMatrix.o(x = "D$LAB_TSC", 
       newobj = "not_a_numeric"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.length.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.lexis.o::arg::test errors" timestamp="2019-08-18 00:40:57" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.34">
    <testcase time="6.34" classname="ds.lexis.o_arg_test_errors" name="lexis_erros">
      <failure type="failure" message="`ds.lexis.o()` threw an error with unexpected message. (@test-arg-ds.lexis.o.R#29)">`ds.lexis.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the column that holds the subject IDs!"
Actual message: "could not find function \"ds.lexis.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.look.o::arg::test errors" timestamp="2019-08-18 00:41:04" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.45">
    <testcase time="6.45" classname="ds.look.o_arg_test_errors" name="look_erros">
      <failure type="failure" message="`ds.look.o(checks = TRUE)` threw an error with unexpected message. (@test-arg-ds.look.o.R#29)">`ds.look.o(checks = TRUE)` threw an error with unexpected message.
Expected match: "&lt;toAggregate&gt; missing, please give an expression/function in inverted commas\n"
Actual message: "could not find function \"ds.look.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.make.o::arg::test errors" timestamp="2019-08-18 00:41:10" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.4">
    <testcase time="6.4" classname="ds.make.o_arg_test_errors" name="make_erros">
      <failure type="failure" message="`ds.make.o()` threw an error with unexpected message. (@test-arg-ds.make.o.R#29)">`ds.make.o()` threw an error with unexpected message.
Expected match: "Please give the name of object to assign or an expression to evaluate and assign.!\n"
Actual message: "could not find function \"ds.make.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDet::arg::test errors" timestamp="2019-08-18 00:41:16" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.matrixDet_arg_test_errors" name="matrixDet_erros">
      <error type="error" message="could not find function &quot;ds.matrixDet&quot; (@test-arg-ds.matrixDet.R#29)">could not find function "ds.matrixDet"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixDet\"", base::quote(ds.matrixDet())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixDet.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDet.report::arg::test errors" timestamp="2019-08-18 00:41:23" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.matrixDet.report_arg_test_errors" name="ds.matixDet.report_erros">
      <error type="error" message="could not find function &quot;ds.matrixDet.report&quot; (@test-arg-ds.matrixDet.report.R#30)">could not find function "ds.matrixDet.report"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixDet.report\"", base::quote(ds.matrixDet.report(M1 = NULL))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixDet.report.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDiag::arg::test errors" timestamp="2019-08-18 00:41:29" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.34">
    <testcase time="6.34" classname="ds.matrixDiag_arg_test_errors" name="matrixDiag_erros">
      <error type="error" message="could not find function &quot;ds.matrixDiag&quot; (@test-arg-ds.matrixDiag.R#29)">could not find function "ds.matrixDiag"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixDiag\"", base::quote(ds.matrixDiag())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixDiag.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDimnames::arg::test errors" timestamp="2019-08-18 00:41:36" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.matrixDimnames_arg_test_errors" name="matrixDimnames_erros">
      <error type="error" message="could not find function &quot;ds.matrixDimnames&quot; (@test-arg-ds.matrixDimnames.R#29)">could not find function "ds.matrixDimnames"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixDimnames\"", base::quote(ds.matrixDimnames())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixDimnames.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixInvert::arg::test errors" timestamp="2019-08-18 00:41:42" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.matrixInvert_arg_test_errors" name="matrixInvert_erros">
      <error type="error" message="could not find function &quot;ds.matrixInvert&quot; (@test-arg-ds.matrixInvert.R#29)">could not find function "ds.matrixInvert"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixInvert\"", base::quote(ds.matrixInvert())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixInvert.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixMult::arg::test errors" timestamp="2019-08-18 00:41:48" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.32">
    <testcase time="6.32" classname="ds.matrixMult_arg_test_errors" name="matrixMult_erros">
      <error type="error" message="could not find function &quot;ds.matrixMult&quot; (@test-arg-ds.matrixMult.R#29)">could not find function "ds.matrixMult"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixMult\"", base::quote(ds.matrixMult())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixMult.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrix::arg::test errors" timestamp="2019-08-18 00:41:55" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.matrix_arg_test_errors" name="matrix_erros">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-arg-ds.matrix.R#29)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = NULL))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrix.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixTranspose::arg::test errors" timestamp="2019-08-18 00:42:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.matrixTranspose_arg_test_errors" name="matrixTranspose_erros">
      <error type="error" message="could not find function &quot;ds.matrixTranspose&quot; (@test-arg-ds.matrixTranspose.R#29)">could not find function "ds.matrixTranspose"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixTranspose\"", base::quote(ds.matrixTranspose())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.matrixTranspose.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::arg::test errors" timestamp="2019-08-18 00:42:08" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.mean.o_arg_test_errors" name="mean_erros">
      <error type="error" message="could not find function &quot;ds.asCharacter.o&quot; (@test-arg-ds.mean.o.R#29)">could not find function "ds.asCharacter.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asCharacter.o\"", base::quote(ds.asCharacter.o(x = "D$LAB_TSC", 
       newobj = "not_a_numeric"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.mean.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.meanSdGp::arg::test errors" timestamp="2019-08-18 00:42:14" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.48">
    <testcase time="6.48" classname="ds.meanSdGp_arg_test_errors" name="meanSdGp_erros">
      <failure type="failure" message="`ds.meanSdGp()` threw an error with unexpected message. (@test-arg-ds.meanSdGp.R#29)">`ds.meanSdGp()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.meanSdGp\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.merge.o::arg::test errors" timestamp="2019-08-18 00:42:20" hostname="fv-az679" tests="5" skipped="0" failures="5" errors="0" time="6.38">
    <testcase time="6.38" classname="ds.merge.o_arg_test_errors" name="merge_erros">
      <failure type="failure" message="`ds.merge.o()` threw an error with unexpected message. (@test-arg-ds.merge.o.R#29)">`ds.merge.o()` threw an error with unexpected message.
Expected match: "Please provide the name (eg 'name1') of first dataframe to be merged (called x) "
Actual message: "could not find function \"ds.merge.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.merge.o_arg_test_errors" name="merge_erros">
      <failure type="failure" message="`ds.merge.o(x.name = &quot;A&quot;)` threw an error with unexpected message. (@test-arg-ds.merge.o.R#30)">`ds.merge.o(x.name = "A")` threw an error with unexpected message.
Expected match: "Please provide the name (eg 'name2') of second dataframe to be merged (called y) "
Actual message: "could not find function \"ds.merge.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.merge.o_arg_test_errors" name="merge_erros">
      <failure type="failure" message="`ds.merge.o(x.name = &quot;A&quot;, y.name = &quot;B&quot;)` threw an error with unexpected message. (@test-arg-ds.merge.o.R#31)">`ds.merge.o(x.name = "A", y.name = "B")` threw an error with unexpected message.
Expected match: "Please provide the names of columns in x dataframe on which to merge (eg c('id', 'time'))"
Actual message: "could not find function \"ds.merge.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.merge.o_arg_test_errors" name="merge_erros">
      <failure type="failure" message="`ds.merge.o(x.name = &quot;A&quot;, y.name = &quot;B&quot;, by.x.names = &quot;C&quot;)` threw an error with unexpected message. (@test-arg-ds.merge.o.R#32)">`ds.merge.o(x.name = "A", y.name = "B", by.x.names = "C")` threw an error with unexpected message.
Expected match: "Please provide the names of columns in y dataframe on which to merge (eg c('id', 'time'))"
Actual message: "could not find function \"ds.merge.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.merge.o_arg_test_errors" name="merge_erros">
      <failure type="failure" message="`ds.merge.o(...)` threw an error with unexpected message. (@test-arg-ds.merge.o.R#33)">`ds.merge.o(...)` threw an error with unexpected message.
Expected match: "Please provide the suffixes to append to disambiguate duplicate column names  (default = c('.x','.y/))"
Actual message: "could not find function \"ds.merge.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.message.o::arg" timestamp="2019-08-18 00:42:27" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.38">
    <testcase time="6.38" classname="ds.message.o_arg" name="request_message_for_NULL">
      <failure type="failure" message="`ds.message.o(NULL)` threw an error with unexpected message. (@test-arg-ds.message.o.R#29)">`ds.message.o(NULL)` threw an error with unexpected message.
Expected match: "Please provide the name of the studyside list object that holds the message\n in character format ie: 'object.name' in inverted commas"
Actual message: "could not find function \"ds.message.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.rbind.o::arg::test errors" timestamp="2019-08-18 00:42:33" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.38">
    <testcase time="6.38" classname="ds.rbind.o_arg_test_errors" name="rbind_erros">
      <failure type="failure" message="`ds.rbind.o()` threw an error with unexpected message. (@test-arg-ds.rbind.o.R#29)">`ds.rbind.o()` threw an error with unexpected message.
Expected match: "Please provide a vector of character strings holding the name of the input elements!"
Actual message: "could not find function \"ds.rbind.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.rBinom.o::arg::test errors" timestamp="2019-08-18 00:42:39" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.36">
    <testcase time="6.36" classname="ds.rBinom.o_arg_test_errors" name="rBinom_erros">
      <error type="error" message="could not find function &quot;ds.rBinom.o&quot; (@test-arg-ds.rBinom.o.R#29)">could not find function "ds.rBinom.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rBinom.o\"", base::quote(ds.rBinom.o(seed.as.integer = "Value"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.rBinom.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.recodeValues.o::arg::test errors" timestamp="2019-08-18 00:42:46" hostname="fv-az679" tests="6" skipped="0" failures="6" errors="0" time="6.32">
    <testcase time="6.32" classname="ds.recodeValues.o_arg_test_errors" name="recodeValues_erros">
      <failure type="failure" message="`ds.recodeValues.o()` threw an error with unexpected message. (@test-arg-ds.recodeValues.o.R#29)">`ds.recodeValues.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the variable to be recoded: eg 'xxx'"
Actual message: "could not find function \"ds.recodeValues.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.recodeValues.o_arg_test_errors" name="recodeValues_erros">
      <failure type="failure" message="`ds.recodeValues.o(&quot;D$LAB_TSC&quot;)` threw an error with unexpected message. (@test-arg-ds.recodeValues.o.R#30)">`ds.recodeValues.o("D$LAB_TSC")` threw an error with unexpected message.
Expected match: "Please provide a vector specifying the values to be replaced eg c(1,7,NA)"
Actual message: "could not find function \"ds.recodeValues.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.recodeValues.o_arg_test_errors" name="recodeValues_erros">
      <failure type="failure" message="`ds.recodeValues.o(&quot;D$LAB_TSC&quot;, values2replace.vector = c(0, 1))` threw an error with unexpected message. (@test-arg-ds.recodeValues.o.R#31)">`ds.recodeValues.o("D$LAB_TSC", values2replace.vector = c(0, 1))` threw an error with unexpected message.
Expected match: "Please provide a vector specifying the new values to be set eg c(3,NA,4)"
Actual message: "could not find function \"ds.recodeValues.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.recodeValues.o_arg_test_errors" name="recodeValues_erros">
      <failure type="failure" message="`ds.recodeValues.o(...)` threw an error with unexpected message. (@test-arg-ds.recodeValues.o.R#32)">`ds.recodeValues.o(...)` threw an error with unexpected message.
Expected match: "Please ensure that values2replace.vector and new.values.vector have same length and are in the same order"
Actual message: "could not find function \"ds.recodeValues.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.recodeValues.o_arg_test_errors" name="recodeValues_erros">
      <failure type="failure" message="`ds.recodeValues.o(...)` threw an error with unexpected message. (@test-arg-ds.recodeValues.o.R#33)">`ds.recodeValues.o(...)` threw an error with unexpected message.
Expected match: "No value may appear more than once in the values2replace.vector"
Actual message: "could not find function \"ds.recodeValues.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.recodeValues.o_arg_test_errors" name="recodeValues_erros">
      <failure type="failure" message="`ds.recodeValues.o(...)` threw an error with unexpected message. (@test-arg-ds.recodeValues.o.R#34)">`ds.recodeValues.o(...)` threw an error with unexpected message.
Expected match: "The &lt;values2replace.vector&gt; consists solely of one element which is NA. Please see details\nin the help information for ds.recodeValues.o to find an easy work around that circumvents\nthe coding restriction that prohibits this particular way of specifying this recoding request"
Actual message: "could not find function \"ds.recodeValues.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.reShape.o::arg::test errors" timestamp="2019-08-18 00:42:52" hostname="fv-az679" tests="4" skipped="0" failures="4" errors="0" time="6.43">
    <testcase time="6.43" classname="ds.reShape.o_arg_test_errors" name="reShape_erros">
      <failure type="failure" message="`ds.reShape.o()` threw an error with unexpected message. (@test-arg-ds.reShape.o.R#29)">`ds.reShape.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the list that holds the input vectors!"
Actual message: "could not find function \"ds.reShape.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.reShape.o_arg_test_errors" name="reShape_erros">
      <failure type="failure" message="`ds.reShape.o(data.name = &quot;test&quot;, sep = TRUE)` threw an error with unexpected message. (@test-arg-ds.reShape.o.R#30)">`ds.reShape.o(data.name = "test", sep = TRUE)` threw an error with unexpected message.
Expected match: "'sep' must be a character string"
Actual message: "could not find function \"ds.reShape.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.reShape.o_arg_test_errors" name="reShape_erros">
      <failure type="failure" message="`ds.reShape.o(data.name = &quot;test&quot;, sep = &quot;&quot;)` threw an error with unexpected message. (@test-arg-ds.reShape.o.R#31)">`ds.reShape.o(data.name = "test", sep = "")` threw an error with unexpected message.
Expected match: "'sep' must be a character string"
Actual message: "could not find function \"ds.reShape.o\""</failure>
    </testcase>
    <testcase time="0" classname="ds.reShape.o_arg_test_errors" name="reShape_erros">
      <failure type="failure" message="`ds.reShape.o(data.name = &quot;test&quot;, sep = &quot;ts&quot;)` threw an error with unexpected message. (@test-arg-ds.reShape.o.R#32)">`ds.reShape.o(data.name = "test", sep = "ts")` threw an error with unexpected message.
Expected match: "'sep' must be a character string"
Actual message: "could not find function \"ds.reShape.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.rm.o::arg::test errors" timestamp="2019-08-18 00:42:59" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.38">
    <testcase time="6.38" classname="ds.rm.o_arg_test_errors" name="ds.rm.o_erros">
      <failure type="failure" message="`ds.rm.o()` threw an error with unexpected message. (@test-arg-ds.rm.o.R#30)">`ds.rm.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the object to be deleted (eg 'object.name') as the x.name argument"
Actual message: "could not find function \"ds.rm.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.rNorm.o::arg::test errors" timestamp="2019-08-18 00:43:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.36">
    <testcase time="6.36" classname="ds.rNorm.o_arg_test_errors" name="rNorm_erros">
      <error type="error" message="could not find function &quot;ds.rNorm.o&quot; (@test-arg-ds.rNorm.o.R#29)">could not find function "ds.rNorm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rNorm.o\"", base::quote(ds.rNorm.o(seed.as.integer = "Value"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.rNorm.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o::arg::test errors" timestamp="2019-08-18 00:43:12" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.51">
    <testcase time="6.51" classname="ds.rPois.o_arg_test_errors" name="rPois_erros">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-arg-ds.rPois.o.R#29)">could not find function "ds.rPois.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rPois.o\"", base::quote(ds.rPois.o(seed.as.integer = "Value"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.rPois.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o::arg::test errors" timestamp="2019-08-18 00:43:18" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.37">
    <testcase time="6.37" classname="ds.rUnif.o_arg_test_errors" name="rUnif_erros">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-arg-ds.rUnif.o.R#29)">could not find function "ds.rUnif.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rUnif.o\"", base::quote(ds.rUnif.o(seed.as.integer = "Value"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.rUnif.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.seq.o::arg::test errors" timestamp="2019-08-18 00:43:24" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.36">
    <testcase time="6.36" classname="ds.seq.o_arg_test_errors" name="seq_erros">
      <failure type="failure" message="`ds.seq.o(FROM.value.char = &quot;Test&quot;)` threw an error with unexpected message. (@test-arg-ds.seq.o.R#29)">`ds.seq.o(FROM.value.char = "Test")` threw an error with unexpected message.
Expected match: "object 'Test' not found"
Actual message: "could not find function \"ds.seq.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.setSeed.o::arg::test errors" timestamp="2019-08-18 00:43:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.34">
    <testcase time="6.34" classname="ds.setSeed.o_arg_test_errors" name="setSeed_erros">
      <error type="error" message="could not find function &quot;ds.setSeed.o&quot; (@test-arg-ds.setSeed.o.R#29)">could not find function "ds.setSeed.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.setSeed.o\"", base::quote(ds.setSeed.o(seed.as.integer = "Test"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.setSeed.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.table2D.o::arg::test errors" timestamp="2019-08-18 00:43:37" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.38">
    <testcase time="6.38" classname="ds.table2D.o_arg_test_errors" name="table2D_erros">
      <failure type="failure" message="`ds.table2D.o()` threw an error with unexpected message. (@test-arg-ds.table2D.o.R#29)">`ds.table2D.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the x vector!"
Actual message: "could not find function \"ds.table2D.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.tapply.assign.o::arg::test errors" timestamp="2019-08-18 00:43:43" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.tapply.assign.o_arg_test_errors" name="tapply_erros">
      <error type="error" message="could not find function &quot;ds.tapply.assign.o&quot; (@test-arg-ds.tapply.assign.o.R#29)">could not find function "ds.tapply.assign.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.tapply.assign.o\"", base::quote(ds.tapply.assign.o())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.tapply.assign.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.tapply.o::arg::test errors" timestamp="2019-08-18 00:43:50" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.41">
    <testcase time="6.41" classname="ds.tapply.o_arg_test_errors" name="tapply_erros">
      <error type="error" message="could not find function &quot;ds.tapply.o&quot; (@test-arg-ds.tapply.o.R#29)">could not find function "ds.tapply.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.tapply.o\"", base::quote(ds.tapply.o())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.tapply.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.testObjExists.o::arg::test errors" timestamp="2019-08-18 00:43:56" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.38">
    <testcase time="6.38" classname="ds.testObjExists.o_arg_test_errors" name="testObjExists_erros">
      <error type="error" message="could not find function &quot;ds.testObjExists.o&quot; (@test-arg-ds.testObjExists.o.R#29)">could not find function "ds.testObjExists.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.testObjExists.o\"", base::quote(ds.testObjExists.o())) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.testObjExists.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.unList.o::arg::test errors" timestamp="2019-08-18 00:44:03" hostname="fv-az679" tests="1" skipped="0" failures="1" errors="0" time="6.37">
    <testcase time="6.37" classname="ds.unList.o_arg_test_errors" name="unList_erros">
      <failure type="failure" message="`ds.unList.o()` threw an error with unexpected message. (@test-arg-ds.unList.o.R#29)">`ds.unList.o()` threw an error with unexpected message.
Expected match: "Please provide the name of the input vector!"
Actual message: "could not find function \"ds.unList.o\""</failure>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o::arg::test errors" timestamp="2019-08-18 00:44:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.36">
    <testcase time="6.36" classname="ds.var.o_arg_test_errors" name="var_erros">
      <error type="error" message="could not find function &quot;ds.asCharacter.o&quot; (@test-arg-ds.var.o.R#29)">could not find function "ds.asCharacter.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asCharacter.o\"", base::quote(ds.asCharacter.o(x = "D$LAB_TSC", 
       newobj = "not_a_numeric"))) at /home/vsts/work/1/s/tests/testthat/test-arg-ds.var.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::disc::type=both" timestamp="2019-08-18 00:44:15" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.mean.o_disc_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-disc-ds.mean.o.R#28)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = myvectors, 
       newobj = "unsubset_df"))) at /home/vsts/work/1/s/tests/testthat/test-disc-ds.mean.o.R:28
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rm.o::disc" timestamp="2019-08-18 00:44:22" hostname="fv-az679" tests="2" skipped="0" failures="0" errors="2" time="6.4">
    <testcase time="6.4" classname="ds.rm.o_disc" name="justovertest">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-disc-ds.rm.o.R#29)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o(c("12345678910", "12345678910")))) at /home/vsts/work/1/s/tests/testthat/test-disc-ds.rm.o.R:29
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.rm.o_disc" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-disc-ds.rm.o.R#57)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("thisisareallylongname_testing_datashield"))) at /home/vsts/work/1/s/tests/testthat/test-disc-ds.rm.o.R:57
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o::disc::type=both" timestamp="2019-08-18 00:44:28" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.var.o_disc_type_both" name="var_values_both_">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-disc-ds.var.o.R#28)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = myvectors, 
       newobj = "unsubset_df"))) at /home/vsts/work/1/s/tests/testthat/test-disc-ds.var.o.R:28
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asFactor.o()::expt::multiple" timestamp="2019-08-18 00:44:28" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.49">
    <testcase time="6.49" classname="ds.asFactor.o_expt_multiple" name="combined_data_set">
      <error type="error" message="could not find function &quot;ds.asFactor.o&quot; (@test-expt-ds.asFactor.o.R#9)">could not find function "ds.asFactor.o"
1: .test.find.factor("D$INTEGER", "INT.f", ds.test_env$local.values, 6) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.asFactor.o.R:9
2: .find.factors.server(variable.name, variable.recoded)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asFactor.o()::expt::single" timestamp="2019-08-18 00:44:35" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.93">
    <testcase time="3.93" classname="ds.asFactor.o_expt_single" name="single_dataset_">
      <error type="error" message="could not find function &quot;ds.asFactor.o&quot; (@test-expt-ds.asFactor.o.R#24)">could not find function "ds.asFactor.o"
1: .test.find.factor("D$INTEGER", "INT.f", ds.test_env$local.values.1, 6) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.asFactor.o.R:24
2: .find.factors.server(variable.name, variable.recoded)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::one_column::single" timestamp="2019-08-18 00:44:39" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.81">
    <testcase time="3.81" classname="ds.dataFrame.o_expt_one_column_single" name="numeric_data">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-expt-ds.dataFrame.o.R#8)">could not find function "ds.dataFrame.o"
1: .test.data.frame.creation(c("D$NUMERIC"), "numeric_1_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:8</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::several_columns::single" timestamp="2019-08-18 00:44:42" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.79">
    <testcase time="3.79" classname="ds.dataFrame.o_expt_several_columns_single" name="numeric_data">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-expt-ds.dataFrame.o.R#22)">could not find function "ds.dataFrame.o"
1: .test.data.frame.creation(c("D$NUMERIC", "D$NON_NEGATIVE_NUMERIC", "D$POSITIVE_NUMERIC", 
       "D$NEGATIVE_NUMERIC"), "numeric_8_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:22</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::one_column::multiple" timestamp="2019-08-18 00:44:46" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.34">
    <testcase time="6.34" classname="ds.dataFrame.o_expt_one_column_multiple" name="numeric_data">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-expt-ds.dataFrame.o.R#30)">could not find function "ds.dataFrame.o"
1: .test.data.frame.creation(c("D$NUMERIC"), "numeric_9_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:30</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::several_columns::single" timestamp="2019-08-18 00:44:52" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.5">
    <testcase time="6.5" classname="ds.dataFrame.o_expt_several_columns_single" name="numeric_data">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-expt-ds.dataFrame.o.R#44)">could not find function "ds.dataFrame.o"
1: .test.data.frame.creation(c("D$NUMERIC", "D$NON_NEGATIVE_NUMERIC", "D$POSITIVE_NUMERIC", 
       "D$NEGATIVE_NUMERIC"), "numeric_17_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:44</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::one_column_from_objects::single" timestamp="2019-08-18 00:44:59" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.91">
    <testcase time="3.91" classname="ds.dataFrame.o_expt_one_column_from_objects_single" name="numeric_data">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.dataFrame.o.R#52)">could not find function "ds.make.o"
1: .test.data.frame.from.objects("D$NUMERIC", "numeric_created", "numeric_19_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:52</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::object::multiple" timestamp="2019-08-18 00:45:03" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.dataFrame.o_expt_object_multiple" name="numeric_data">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.dataFrame.o.R#66)">could not find function "ds.make.o"
1: .test.data.frame.from.objects("D$NUMERIC", "numeric_created", "numeric_28_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:66</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::several_objects::multiple" timestamp="2019-08-18 00:45:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.62">
    <testcase time="6.62" classname="ds.dataFrame.o_expt_several_objects_multiple" name="several_objects">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.dataFrame.o.R#80)">could not find function "ds.make.o"
1: .test.data.frame.from.different.objects("multiple_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:80</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::non_numeric::multiple" timestamp="2019-08-18 00:45:16" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.54">
    <testcase time="6.54" classname="ds.dataFrame.o_expt_non_numeric_multiple" name="non_numeric">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-expt-ds.dataFrame.o.R#87)">could not find function "ds.dataFrame.o"
1: .test.data.frame.creation(c("D$CHARACTER"), "character_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:87</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o()::expt::non_numeric::multiple" timestamp="2019-08-18 00:45:23" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.88">
    <testcase time="3.88" classname="ds.dataFrame.o_expt_non_numeric_multiple" name="_unnamed_">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-expt-ds.dataFrame.o.R#97)">could not find function "ds.dataFrame.o"
1: .test.data.frame.creation(c("D$CHARACTER"), "character_df") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.dataFrame.o.R:97</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::expt::combine::multiple" timestamp="2019-08-18 00:45:26" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.37">
    <testcase time="6.37" classname="ds.mean.o_expt_combine_multiple" name="combined_data_set">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-expt-ds.mean.o.R#9)">could not find function "ds.mean.o"
1: .test.mean.combined("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.mean.o.R:9</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::expt::split::multiple" timestamp="2019-08-18 00:45:33" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.48">
    <testcase time="6.48" classname="ds.mean.o_expt_split_multiple" name="split_data_set">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-expt-ds.mean.o.R#23)">could not find function "ds.mean.o"
1: .test.mean.split("D$INTEGER", ds.test_env$local.values.1[, 6], ds.test_env$local.values.2[, 
       6], ds.test_env$local.values.3[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.mean.o.R:23</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::expt::single" timestamp="2019-08-18 00:45:39" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.92">
    <testcase time="3.92" classname="ds.mean.o_expt_single" name="combined_data_set">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-expt-ds.mean.o.R#38)">could not find function "ds.mean.o"
1: .test.mean.combined("D$INTEGER", ds.test_env$local.values.1[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.mean.o.R:38</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::expt::large_values::single" timestamp="2019-08-18 00:45:43" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.79">
    <testcase time="3.79" classname="ds.mean.o_expt_large_values_single" name="combined_data_set">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.mean.o.R#52)">could not find function "ds.make.o"
1: .test.mean.large("D$INTEGER", ds.test_env$local.values.1[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.mean.o.R:52</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::expt::large_values::multiple" timestamp="2019-08-18 00:45:47" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.38">
    <testcase time="6.38" classname="ds.mean.o_expt_large_values_multiple" name="combined_data_set">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.mean.o.R#66)">could not find function "ds.make.o"
1: .test.mean.large("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.mean.o.R:66</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.reshape()::expt::multiple" timestamp="2019-08-18 00:45:53" hostname="fv-az679" tests="1" skipped="1" failures="0" errors="0" time="0.55">
    <testcase time="0.55" classname="ds.reshape_expt_multiple" name="copy_and_transform">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::expt::no seeds::single" timestamp="2019-08-18 00:45:54" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="3.79">
    <testcase time="3.77" classname="ds.rPois.o_expt_no_seeds_single" name="Poisson_without_seeds"/>
    <testcase time="0.02" classname="ds.rPois.o_expt_no_seeds_single" name="Poisson_without_seeds"/>
    <testcase time="0" classname="ds.rPois.o_expt_no_seeds_single" name="Poisson_without_seeds">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-expt-ds.rPois.o.R#11)">could not find function "ds.rPois.o"
1: .test.basic.expectation(1, "poisson_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rPois.o.R:11</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::expt::no seeds::multiple" timestamp="2019-08-18 00:45:58" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.rPois.o_expt_no_seeds_multiple" name="Poisson_without_seeds"/>
    <testcase time="0" classname="ds.rPois.o_expt_no_seeds_multiple" name="Poisson_without_seeds"/>
    <testcase time="0" classname="ds.rPois.o_expt_no_seeds_multiple" name="Poisson_without_seeds">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-expt-ds.rPois.o.R#24)">could not find function "ds.rPois.o"
1: .test.basic.expectation(1, "poisson_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rPois.o.R:24</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::expt::with seeds::single" timestamp="2019-08-18 00:46:04" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="3.98">
    <testcase time="3.96" classname="ds.rPois.o_expt_with_seeds_single" name="Poisson_with_seeds"/>
    <testcase time="0.02" classname="ds.rPois.o_expt_with_seeds_single" name="Poisson_with_seeds"/>
    <testcase time="0" classname="ds.rPois.o_expt_with_seeds_single" name="Poisson_with_seeds">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-expt-ds.rPois.o.R#40)">could not find function "ds.rPois.o"
1: .test.basic.expectation.with.seeds(1, "poisson_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rPois.o.R:40</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::expt::with seeds::multiple" timestamp="2019-08-18 00:46:08" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.rPois.o_expt_with_seeds_multiple" name="Poisson_with_seeds"/>
    <testcase time="0" classname="ds.rPois.o_expt_with_seeds_multiple" name="Poisson_with_seeds"/>
    <testcase time="0" classname="ds.rPois.o_expt_with_seeds_multiple" name="Poisson_with_seeds">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-expt-ds.rPois.o.R#53)">could not find function "ds.rPois.o"
1: .test.basic.expectation.with.seeds(1, "poisson_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rPois.o.R:53</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::expt::no_seeds::single" timestamp="2019-08-18 00:46:14" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="3.97">
    <testcase time="3.95" classname="ds.rUnif.o_expt_no_seeds_single" name="basic_expectation"/>
    <testcase time="0.02" classname="ds.rUnif.o_expt_no_seeds_single" name="basic_expectation"/>
    <testcase time="0" classname="ds.rUnif.o_expt_no_seeds_single" name="basic_expectation">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-expt-ds.rUnif.o.R#11)">could not find function "ds.rUnif.o"
1: .test.basic.expectation(1, "uniform_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rUnif.o.R:11</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::expt::no_seeds::multiple" timestamp="2019-08-18 00:46:18" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.rUnif.o_expt_no_seeds_multiple" name="basic_expectation"/>
    <testcase time="0" classname="ds.rUnif.o_expt_no_seeds_multiple" name="basic_expectation"/>
    <testcase time="0" classname="ds.rUnif.o_expt_no_seeds_multiple" name="basic_expectation">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-expt-ds.rUnif.o.R#24)">could not find function "ds.rUnif.o"
1: .test.basic.expectation(1, "uniform_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rUnif.o.R:24</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::expt::seeds::single" timestamp="2019-08-18 00:46:25" hostname="fv-az679" tests="3" skipped="0" failures="0" errors="1" time="3.9">
    <testcase time="3.88" classname="ds.rUnif.o_expt_seeds_single" name="basic_expectation"/>
    <testcase time="0.02" classname="ds.rUnif.o_expt_seeds_single" name="basic_expectation"/>
    <testcase time="0" classname="ds.rUnif.o_expt_seeds_single" name="basic_expectation">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-expt-ds.rUnif.o.R#37)">could not find function "ds.rUnif.o"
1: .test.basic.expectation.with.seeds(1, "uniform_dist_3") at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rUnif.o.R:37</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::expt::seeds::multiple" timestamp="2019-08-18 00:46:29" hostname="fv-az679" tests="2" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.rUnif.o_expt_seeds_multiple" name="basic_expectation"/>
    <testcase time="0" classname="ds.rUnif.o_expt_seeds_multiple" name="basic_expectation">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-expt-ds.rUnif.o.R#48)">could not find function "ds.rUnif.o"
1: .test.too.negative.seed() at /home/vsts/work/1/s/tests/testthat/test-expt-ds.rUnif.o.R:48
2: expect_warning(ds.rUnif.o(samp.size = 100, newobj = "dist.created", seed.as.integer = seed, 
       datasources = ds.test_env$connection.opal))
3: quasi_capture(enquo(object), label, capture_warnings)
4: .capture(act$val &lt;- eval_bare(get_expr(.quo), get_env(.quo)), ...)
5: withCallingHandlers(code, warning = function(condition) {
       out$push(condition)
       invokeRestart("muffleWarning")
   })
6: eval_bare(get_expr(.quo), get_env(.quo))</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::expt::multiple" timestamp="2019-08-18 00:46:35" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.5">
    <testcase time="6.5" classname="ds.var.o_expt_multiple" name="combined_data_set">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-expt-ds.var.o.R#9)">could not find function "ds.var.o"
1: .test.var.combined("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.var.o.R:9</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::expt::single" timestamp="2019-08-18 00:46:42" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.55">
    <testcase time="6.55" classname="ds.var.o_expt_single" name="split_data_set">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-expt-ds.var.o.R#23)">could not find function "ds.var.o"
1: .test.var.split("D$INTEGER", ds.test_env$local.values.1[, 6], ds.test_env$local.values.2[, 
       6], ds.test_env$local.values.3[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.var.o.R:23</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::expt::large_values::multiple" timestamp="2019-08-18 00:46:48" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.var.o_expt_large_values_multiple" name="large_values">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.var.o.R#37)">could not find function "ds.make.o"
1: .test.variance.large("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.var.o.R:37</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::expt::large_values::single" timestamp="2019-08-18 00:46:55" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.97">
    <testcase time="3.97" classname="ds.var.o_expt_large_values_single" name="large_values">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-expt-ds.var.o.R#51)">could not find function "ds.make.o"
1: .test.variance.large("D$INTEGER", ds.test_env$local.values.1[, 6]) at /home/vsts/work/1/s/tests/testthat/test-expt-ds.var.o.R:51</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asFactor.o()::math::multiple" timestamp="2019-08-18 00:46:59" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.48">
    <testcase time="6.48" classname="ds.asFactor.o_math_multiple" name="every_factor_should_be_unique">
      <error type="error" message="could not find function &quot;ds.asFactor.o&quot; (@test-math-ds.asFactor.o.R#5)">could not find function "ds.asFactor.o"
1: .test.uniqueness("D$INTEGER", "INT.f") at /home/vsts/work/1/s/tests/testthat/test-math-ds.asFactor.o.R:5</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asFactor.o()::math::multiple" timestamp="2019-08-18 00:47:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.94">
    <testcase time="3.94" classname="ds.asFactor.o_math_multiple" name="every_factor_should_be_unique">
      <error type="error" message="could not find function &quot;ds.asFactor.o&quot; (@test-math-ds.asFactor.o.R#20)">could not find function "ds.asFactor.o"
1: .test.uniqueness("D$INTEGER", "INT.f") at /home/vsts/work/1/s/tests/testthat/test-math-ds.asFactor.o.R:20</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.make.o()::math::transformation::multiple" timestamp="2019-08-18 00:47:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.make.o_math_transformation_multiple" name="transformation">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-math-ds.make.o.R#10)">could not find function "ds.mean.o"
1: .test.operation.mean("D$INTEGER", constant.value, "INTEGER_CREATED", "+") at /home/vsts/work/1/s/tests/testthat/test-math-ds.make.o.R:10
2: .calc.distribution.server(first.variable.name)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::math::residual::multiple" timestamp="2019-08-18 00:47:16" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.54">
    <testcase time="6.54" classname="ds.mean.o_math_residual_multiple" name="residual_deviation_tends_to_0">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-math-ds.mean.o.R#10)">could not find function "ds.mean.o"
1: .test.residual.combined("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-math-ds.mean.o.R:10</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::math::residual::single" timestamp="2019-08-18 00:47:22" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.5">
    <testcase time="6.5" classname="ds.mean.o_math_residual_single" name="residual_deviation_tends_to_0">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-math-ds.mean.o.R#35)">could not find function "ds.mean.o"
1: .test.residual.combined("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-math-ds.mean.o.R:35</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::math::location_parameter::single" timestamp="2019-08-18 00:47:29" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.96">
    <testcase time="3.96" classname="ds.mean.o_math_location_parameter_single" name="mean_X_a_mean_X_a">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.mean.o.R#61)">could not find function "ds.make.o"
1: .test.location.parameter("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.mean.o.R:61</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::math::location_parameter::multiple" timestamp="2019-08-18 00:47:32" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.36">
    <testcase time="6.36" classname="ds.mean.o_math_location_parameter_multiple" name="mean_X_a_mean_X_a">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.mean.o.R#76)">could not find function "ds.make.o"
1: .test.location.parameter("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.mean.o.R:76</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::math::scale::multiple" timestamp="2019-08-18 00:47:39" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.49">
    <testcase time="6.49" classname="ds.mean.o_math_scale_multiple" name="mean_X_a_mean_X_a">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.mean.o.R#94)">could not find function "ds.make.o"
1: .test.scale("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.mean.o.R:94</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o()::math::scale::single" timestamp="2019-08-18 00:47:45" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.9">
    <testcase time="3.9" classname="ds.mean.o_math_scale_single" name="mean_X_a_mean_X_a">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.mean.o.R#109)">could not find function "ds.make.o"
1: .test.scale("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.mean.o.R:109</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.recodeValues.o::math::single" timestamp="2019-08-18 00:47:49" hostname="fv-az679" tests="10" skipped="0" failures="0" errors="1" time="7.66">
    <testcase time="3.86" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="0" classname="ds.recodeValues.o_math_single" name="difference"/>
    <testcase time="3.8" classname="ds.recodeValues.o_math_single" name="difference">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-math-ds.recodeValues.o.R#24)">could not find function "ds.mean.o"
1: .test.differences.in.sets("D$INTEGER", "INTEGER_recoded", ds.test_env$local.values.1, 
       6, values.to.replace) at /home/vsts/work/1/s/tests/testthat/test-math-ds.recodeValues.o.R:24
2: .calc.distribution.server(variable.name)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.recodeValues.o::math::multiple" timestamp="2019-08-18 00:47:57" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.recodeValues.o_math_multiple" name="difference">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-math-ds.recodeValues.o.R#73)">could not find function "ds.mean.o"
1: .test.differences.in.sets("D$NEGATIVE_NUMERIC", "NEGATIVE_NUMERIC_recoded", ds.test_env$local.values.1, 
       13, values.to.replace) at /home/vsts/work/1/s/tests/testthat/test-math-ds.recodeValues.o.R:73
2: .calc.distribution.server(variable.name)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::math::lambda equal mean and var::single" timestamp="2019-08-18 00:48:03" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.96">
    <testcase time="3.96" classname="ds.rPois.o_math_lambda_equal_mean_and_var_single" name="lamdba_mean_and_lambda_var">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-math-ds.rPois.o.R#11)">could not find function "ds.rPois.o"
1: .test.lambda.mean.var(seed, c(1)) at /home/vsts/work/1/s/tests/testthat/test-math-ds.rPois.o.R:11</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::math::lambda equal mean and var::multiple" timestamp="2019-08-18 00:48:07" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.rPois.o_math_lambda_equal_mean_and_var_multiple" name="lamdba_mean_and_lambda_var">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-math-ds.rPois.o.R#22)">could not find function "ds.rPois.o"
1: .test.lambda.mean.var(seed, c(1)) at /home/vsts/work/1/s/tests/testthat/test-math-ds.rPois.o.R:22</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::math::distributions comparison::multiple" timestamp="2019-08-18 00:48:14" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.53">
    <testcase time="6.53" classname="ds.rPois.o_math_distributions_comparison_multiple" name="changes_in_distribution">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-math-ds.rPois.o.R#33)">could not find function "ds.rPois.o"
1: .test.dispersions.stats.same.distribution(seed, c(6), seed, c(6)) at /home/vsts/work/1/s/tests/testthat/test-math-ds.rPois.o.R:33</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o()::math::distributions comparison::single" timestamp="2019-08-18 00:48:20" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.96">
    <testcase time="3.96" classname="ds.rPois.o_math_distributions_comparison_single" name="changes_in_distribution">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-math-ds.rPois.o.R#45)">could not find function "ds.rPois.o"
1: .test.dispersions.stats.same.distribution(seed, c(6), seed, c(6)) at /home/vsts/work/1/s/tests/testthat/test-math-ds.rPois.o.R:45</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::math::mean_variance::single" timestamp="2019-08-18 00:48:24" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.83">
    <testcase time="3.83" classname="ds.rUnif.o_math_mean_variance_single" name="mean_variance">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-math-ds.rUnif.o.R#10)">could not find function "ds.rUnif.o"
1: .test.range.values(1, 2, "uniform_1") at /home/vsts/work/1/s/tests/testthat/test-math-ds.rUnif.o.R:10</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::math::distributions comparison::single" timestamp="2019-08-18 00:48:28" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.81">
    <testcase time="3.81" classname="ds.rUnif.o_math_distributions_comparison_single" name="changes_in_distribution">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-math-ds.rUnif.o.R#20)">could not find function "ds.rUnif.o"
1: .test.dispersions.stats.same.distribution(0, 1, seed) at /home/vsts/work/1/s/tests/testthat/test-math-ds.rUnif.o.R:20</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o()::math::distributions comparison::multiple" timestamp="2019-08-18 00:48:32" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.36">
    <testcase time="6.36" classname="ds.rUnif.o_math_distributions_comparison_multiple" name="changes_in_distribution">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-math-ds.rUnif.o.R#34)">could not find function "ds.rUnif.o"
1: .test.dispersions.stats.same.distribution(0, 1, seed) at /home/vsts/work/1/s/tests/testthat/test-math-ds.rUnif.o.R:34</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::positive_result::multiple" timestamp="2019-08-18 00:48:38" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.54">
    <testcase time="6.54" classname="ds.var.o_math_positive_result_multiple" name="variance_0">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-math-ds.var.o.R#8)">could not find function "ds.var.o"
1: .test.variance.positive.combine("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:8</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::positive_result::single" timestamp="2019-08-18 00:48:45" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.94">
    <testcase time="3.94" classname="ds.var.o_math_positive_result_single" name="variance_0">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-math-ds.var.o.R#32)">could not find function "ds.var.o"
1: .test.variance.positive.combine("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:32</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::square_root_std::single" timestamp="2019-08-18 00:48:49" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.83">
    <testcase time="3.83" classname="ds.var.o_math_square_root_std_single" name="variance_is_to_the_power_of_2_of_the_standard_deviation">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-math-ds.var.o.R#56)">could not find function "ds.var.o"
1: .test.standard.dev.combine("D$INTEGER", ds.test_env$local.values.1[, 6]) at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:56</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::square_root_std::multiple" timestamp="2019-08-18 00:48:53" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.42">
    <testcase time="6.42" classname="ds.var.o_math_square_root_std_multiple" name="variance_is_to_the_power_of_2_of_the_standard_deviation">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-math-ds.var.o.R#72)">could not find function "ds.var.o"
1: .test.standard.dev.combine("D$INTEGER", ds.test_env$local.values[, 6]) at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:72</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::location::parameter::single" timestamp="2019-08-18 00:48:59" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.94">
    <testcase time="3.94" classname="ds.var.o_math_location_parameter_single" name="var_X_a_Var_X_">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.var.o.R#95)">could not find function "ds.make.o"
1: .test.location.parameter("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:95</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::location::parameter::multiple" timestamp="2019-08-18 00:49:03" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.47">
    <testcase time="6.47" classname="ds.var.o_math_location_parameter_multiple" name="var_X_a_Var_X_">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.var.o.R#109)">could not find function "ds.make.o"
1: .test.location.parameter("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:109</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::scale::single" timestamp="2019-08-18 00:49:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="3.91">
    <testcase time="3.91" classname="ds.var.o_math_scale_single" name="var_aX_a_2Var_X_">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.var.o.R#123)">could not find function "ds.make.o"
1: .test.scale("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:123</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o()::math::scale::multiple" timestamp="2019-08-18 00:49:13" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.42">
    <testcase time="6.42" classname="ds.var.o_math_scale_multiple" name="var_aX_a_2Var_X_">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-math-ds.var.o.R#137)">could not find function "ds.make.o"
1: .test.scale("D$INTEGER") at /home/vsts/work/1/s/tests/testthat/test-math-ds.var.o.R:137</error>
    </testcase>
  </testsuite>
  <testsuite name="checkClass::smk::simple test" timestamp="2019-08-18 00:49:26" hostname="fv-az679" tests="7" skipped="0" failures="0" errors="7" time="6.49">
    <testcase time="6.49" classname="checkClass_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;checkClass&quot; (@test-smk-checkClass.R#30)">could not find function "checkClass"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"checkClass\"", base::quote(checkClass(ds.test_env$connection.opal, 
       "D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:30
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="checkClass_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;checkClass&quot; (@test-smk-checkClass.R#38)">could not find function "checkClass"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"checkClass\"", base::quote(checkClass(ds.test_env$connection.opal, 
       "D$LAB_TSC"))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:38
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="checkClass_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;checkClass&quot; (@test-smk-checkClass.R#46)">could not find function "checkClass"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"checkClass\"", base::quote(checkClass(ds.test_env$connection.opal, 
       "D$LAB_TRIG"))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:46
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="checkClass_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;checkClass&quot; (@test-smk-checkClass.R#54)">could not find function "checkClass"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"checkClass\"", base::quote(checkClass(ds.test_env$connection.opal, 
       "D$LAB_HDL"))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:54
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="checkClass_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;checkClass&quot; (@test-smk-checkClass.R#62)">could not find function "checkClass"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"checkClass\"", base::quote(checkClass(ds.test_env$connection.opal, 
       "D$DIS_CVA"))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:62
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="checkClass_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;checkClass&quot; (@test-smk-checkClass.R#70)">could not find function "checkClass"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"checkClass\"", base::quote(checkClass(ds.test_env$connection.opal, 
       "D$DIS_AMI"))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:70
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="checkClass_smk_simple_test" name="data.frame_test">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-smk-checkClass.R#79)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = myvectors))) at /home/vsts/work/1/s/tests/testthat/test-smk-checkClass.R:79
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asCharacter.o::smk::simple test" timestamp="2019-08-18 00:49:33" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.37">
    <testcase time="6.37" classname="ds.asCharacter.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asCharacter.o&quot; (@test-smk-ds.asCharacter.o.R#31)">could not find function "ds.asCharacter.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asCharacter.o\"", base::quote(ds.asCharacter.o("D$LAB_TSC"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asCharacter.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asDataMatrix.o::smk::simple test" timestamp="2019-08-18 00:49:39" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.asDataMatrix.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asDataMatrix.o&quot; (@test-smk-ds.asDataMatrix.o.R#31)">could not find function "ds.asDataMatrix.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asDataMatrix.o\"", base::quote(ds.asDataMatrix.o(x.name = "D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asDataMatrix.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asFactor.o::smk" timestamp="2019-08-18 00:49:45" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.38">
    <testcase time="6.38" classname="ds.asFactor.o_smk" name="_unnamed_">
      <error type="error" message="could not find function &quot;ds.asNumeric.o&quot; (@test-smk-ds.asFactor.o.R#29)">could not find function "ds.asNumeric.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asNumeric.o\"", base::quote(ds.asNumeric.o("D$time.id", 
       "TID"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asFactor.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asInteger.o::smk::simple test" timestamp="2019-08-18 00:49:52" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.asInteger.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asInteger.o&quot; (@test-smk-ds.asInteger.o.R#30)">could not find function "ds.asInteger.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asInteger.o\"", base::quote(ds.asInteger.o("D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asInteger.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asList.o::smk::simple test" timestamp="2019-08-18 00:49:58" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.37">
    <testcase time="6.37" classname="ds.asList.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asList.o&quot; (@test-smk-ds.asList.o.R#31)">could not find function "ds.asList.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asList.o\"", base::quote(ds.asList.o(x.name = "D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asList.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asLogical.o::smk::simple test" timestamp="2019-08-18 00:50:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.asLogical.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asLogical.o&quot; (@test-smk-ds.asLogical.o.R#31)">could not find function "ds.asLogical.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asLogical.o\"", base::quote(ds.asLogical.o("D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asLogical.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asMatrix.o::smk::simple test" timestamp="2019-08-18 00:50:11" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.48">
    <testcase time="6.48" classname="ds.asMatrix.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asMatrix.o&quot; (@test-smk-ds.asMatrix.o.R#31)">could not find function "ds.asMatrix.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asMatrix.o\"", base::quote(ds.asMatrix.o(x.name = "D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asMatrix.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.asNumeric.o::smk::simple test" timestamp="2019-08-18 00:50:18" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.asNumeric.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asNumeric.o&quot; (@test-smk-ds.asNumeric.o.R#30)">could not find function "ds.asNumeric.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asNumeric.o\"", base::quote(ds.asNumeric.o("D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.asNumeric.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.Boole.o::smk" timestamp="2019-08-18 00:50:24" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.Boole.o_smk" name="simple_boole">
      <error type="error" message="could not find function &quot;ds.Boole.o&quot; (@test-smk-ds.Boole.o.R#29)">could not find function "ds.Boole.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.Boole.o\"", base::quote(ds.Boole.o("D$LAB_TSC", 
       "D$LAB_TRIG", "=="))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.Boole.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.cbind.o::smk" timestamp="2019-08-18 00:50:30" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.cbind.o_smk" name="simple_test">
      <error type="error" message="could not find function &quot;ds.cbind.o&quot; (@test-smk-ds.cbind.o.R#30)">could not find function "ds.cbind.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cbind.o\"", base::quote(ds.cbind.o(c("D$survtime", 
       "D$time.id", "D$female", "D$age.60"), newobj = "cbind_newobj"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cbind.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.cor.o::smk" timestamp="2019-08-18 00:50:37" hostname="fv-az679" tests="4" skipped="0" failures="0" errors="4" time="6.43">
    <testcase time="6.43" classname="ds.cor.o_smk" name="simple_test_combine_pairwise.complete">
      <error type="error" message="could not find function &quot;ds.cor.o&quot; (@test-smk-ds.cor.o.R#30)">could not find function "ds.cor.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cor.o\"", base::quote(ds.cor.o(x = "D$survtime", 
       y = "D$time.id", type = "combine", naAction = "pairwise.complete"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cor.o.R:30
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.cor.o_smk" name="simple_test_combine_casewise.complete">
      <error type="error" message="could not find function &quot;ds.cor.o&quot; (@test-smk-ds.cor.o.R#44)">could not find function "ds.cor.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cor.o\"", base::quote(ds.cor.o(x = "D$survtime", 
       y = "D$time.id", type = "combine", naAction = "casewise.complete"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cor.o.R:44
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.cor.o_smk" name="simple_test_split_pairwise.complete">
      <error type="error" message="could not find function &quot;ds.cor.o&quot; (@test-smk-ds.cor.o.R#58)">could not find function "ds.cor.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cor.o\"", base::quote(ds.cor.o(x = "D$survtime", 
       y = "D$time.id", type = "split", naAction = "pairwise.complete"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cor.o.R:58
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.cor.o_smk" name="simple_test_split_casewise.complete">
      <error type="error" message="could not find function &quot;ds.cor.o&quot; (@test-smk-ds.cor.o.R#82)">could not find function "ds.cor.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cor.o\"", base::quote(ds.cor.o(x = "D$survtime", 
       y = "D$time.id", type = "split", naAction = "casewise.complete"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cor.o.R:82
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.cov.o::smk" timestamp="2019-08-18 00:50:43" hostname="fv-az679" tests="2" skipped="0" failures="0" errors="2" time="6.42">
    <testcase time="6.42" classname="ds.cov.o_smk" name="simple_test_split">
      <error type="error" message="could not find function &quot;ds.cov.o&quot; (@test-smk-ds.cov.o.R#30)">could not find function "ds.cov.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cov.o\"", base::quote(ds.cov.o(x = "D$survtime", 
       y = "D$time.id", type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cov.o.R:30
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.cov.o_smk" name="simple_test_combine">
      <error type="error" message="could not find function &quot;ds.cov.o&quot; (@test-smk-ds.cov.o.R#54)">could not find function "ds.cov.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.cov.o\"", base::quote(ds.cov.o(x = "D$survtime", 
       y = "D$time.id", type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.cov.o.R:54
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o::smk::create a dataframe" timestamp="2019-08-18 00:50:50" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.dataFrame.o_smk_create_a_dataframe" name="dataframe_exists">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-smk-ds.dataFrame.o.R#30)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = vectors))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dataFrame.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrame.o::smk::create a dataframe, with DataSHIELD.checks" timestamp="2019-08-18 00:50:50" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0">
    <testcase time="0" classname="ds.dataFrame.o_smk_create_a_dataframe_with_DataSHIELD.checks" name="dataframe_exists_with_DataSHIELD.checks">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-smk-ds.dataFrame.o.R#41)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = vectors, 
       DataSHIELD.checks = TRUE))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dataFrame.o.R:41
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrameSort.o::smk::create a sorted dataframe" timestamp="2019-08-18 00:50:56" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.48">
    <testcase time="6.48" classname="ds.dataFrameSort.o_smk_create_a_sorted_dataframe" name="dataFrameSort_exists">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-smk-ds.dataFrameSort.o.R#31)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = myvectors, 
       newobj = "unsorted_df"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dataFrameSort.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dataFrameSubset.o::smk::create a subset dataframe" timestamp="2019-08-18 00:51:03" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.47">
    <testcase time="6.47" classname="ds.dataFrameSubset.o_smk_create_a_subset_dataframe" name="dataFrameSubset_exists">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-smk-ds.dataFrameSubset.o.R#31)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = myvectors, 
       newobj = "unsubset_df"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dataFrameSubset.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dim.o::smk" timestamp="2019-08-18 00:51:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.dim.o_smk" name="simple_dim_both">
      <error type="error" message="could not find function &quot;ds.dim.o&quot; (@test-smk-ds.dim.o.R#29)">could not find function "ds.dim.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dim.o\"", base::quote(ds.dim.o("D", type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dim.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dim.o::smk" timestamp="2019-08-18 00:51:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.dim.o_smk" name="simple_dim_split">
      <error type="error" message="could not find function &quot;ds.dim.o&quot; (@test-smk-ds.dim.o.R#48)">could not find function "ds.dim.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dim.o\"", base::quote(ds.dim.o("D", type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dim.o.R:48
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.dim.o::smk" timestamp="2019-08-18 00:51:09" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0">
    <testcase time="0" classname="ds.dim.o_smk" name="simple_dim_combine">
      <error type="error" message="could not find function &quot;ds.dim.o&quot; (@test-smk-ds.dim.o.R#64)">could not find function "ds.dim.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dim.o\"", base::quote(ds.dim.o("D", type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.dim.o.R:64
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.glm.o::smk::binomial" timestamp="2019-08-18 00:51:16" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.47">
    <testcase time="6.47" classname="ds.glm.o_smk_binomial" name="glm_binomial">
      <error type="error" message="could not find function &quot;ds.glm.o&quot; (@test-smk-ds.glm.o-binomial.R#31)">could not find function "ds.glm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.glm.o\"", base::quote(ds.glm.o("D$DIS_DIAB~D$GENDER*D$PM_BMI_CONTINUOUS+D$LAB_HDL", 
       family = "binomial"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.glm.o-binomial.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.glm.o::smk::gaussian" timestamp="2019-08-18 00:51:22" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.glm.o_smk_gaussian" name="glm_gaussian">
      <error type="error" message="could not find function &quot;ds.glm.o&quot; (@test-smk-ds.glm.o-gaussian.R#31)">could not find function "ds.glm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.glm.o\"", base::quote(ds.glm.o("D$LAB_TSC~D$LAB_TRIG", 
       family = "gaussian"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.glm.o-gaussian.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.glm.o::smk::poisson" timestamp="2019-08-18 00:51:28" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.glm.o_smk_poisson" name="glm_gaussian">
      <error type="error" message="could not find function &quot;ds.glm.o&quot; (@test-smk-ds.glm.o-poisson.R#29)">could not find function "ds.glm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.glm.o\"", base::quote(ds.glm.o("D$survtime~1+D$time.id+D$female", 
       family = "poisson"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.glm.o-poisson.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.glmSLMA.o::smk::gaussian" timestamp="2019-08-18 00:51:35" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.glmSLMA.o_smk_gaussian" name="simple_glmSLMA_gaussian">
      <error type="error" message="could not find function &quot;ds.glmSLMA.o&quot; (@test-smk-ds.glmSLMA.o.R#29)">could not find function "ds.glmSLMA.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.glmSLMA.o\"", base::quote(ds.glmSLMA.o("D$LAB_TSC~D$LAB_TRIG", 
       family = "gaussian"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.glmSLMA.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.glmSLMA.o::smk::poisson" timestamp="2019-08-18 00:51:35" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.glmSLMA.o_smk_poisson" name="simple_glmSLMA_poisson">
      <error type="error" message="could not find function &quot;ds.glmSLMA.o&quot; (@test-smk-ds.glmSLMA.o.R#114)">could not find function "ds.glmSLMA.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.glmSLMA.o\"", base::quote(ds.glmSLMA.o("D$LAB_TSC~D$LAB_TRIG", 
       family = "poisson"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.glmSLMA.o.R:114
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.length.o::smk" timestamp="2019-08-18 00:51:41" hostname="fv-az679" tests="6" skipped="0" failures="0" errors="6" time="6.42">
    <testcase time="6.42" classname="ds.length.o_smk" name="basic_length_both">
      <error type="error" message="could not find function &quot;ds.length.o&quot; (@test-smk-ds.length.o.R#29)">could not find function "ds.length.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.length.o\"", base::quote(ds.length.o("D$LAB_TSC", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.length.o.R:29
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.length.o_smk" name="basic_length_split">
      <error type="error" message="could not find function &quot;ds.length.o&quot; (@test-smk-ds.length.o.R#39)">could not find function "ds.length.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.length.o\"", base::quote(ds.length.o("D$LAB_TSC", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.length.o.R:39
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.length.o_smk" name="basic_length_combine">
      <error type="error" message="could not find function &quot;ds.length.o&quot; (@test-smk-ds.length.o.R#48)">could not find function "ds.length.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.length.o\"", base::quote(ds.length.o("D$LAB_TSC", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.length.o.R:48
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.length.o_smk" name="basic_length_both">
      <error type="error" message="could not find function &quot;ds.length.o&quot; (@test-smk-ds.length.o.R#55)">could not find function "ds.length.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.length.o\"", base::quote(ds.length.o("D$LAB_TSC", 
       type = "both", check = TRUE))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.length.o.R:55
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.length.o_smk" name="basic_length_split">
      <error type="error" message="could not find function &quot;ds.length.o&quot; (@test-smk-ds.length.o.R#65)">could not find function "ds.length.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.length.o\"", base::quote(ds.length.o("D$LAB_TSC", 
       type = "split", check = TRUE))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.length.o.R:65
2: eval(code, test_env)</error>
    </testcase>
    <testcase time="0" classname="ds.length.o_smk" name="basic_length_combine">
      <error type="error" message="could not find function &quot;ds.length.o&quot; (@test-smk-ds.length.o.R#74)">could not find function "ds.length.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.length.o\"", base::quote(ds.length.o("D$LAB_TSC", 
       type = "combine", check = TRUE))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.length.o.R:74
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.listDisclosureSettings.o::smk::check results" timestamp="2019-08-18 00:51:48" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.listDisclosureSettings.o_smk_check_results" name="check_results">
      <error type="error" message="could not find function &quot;ds.listDisclosureSettings.o&quot; (@test-smk-ds.listDisclosureSettings.o.R#29)">could not find function "ds.listDisclosureSettings.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.listDisclosureSettings.o\"", base::quote(ds.listDisclosureSettings.o())) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.listDisclosureSettings.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.listServersideFunctions.o::smk::check results" timestamp="2019-08-18 00:51:54" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.48">
    <testcase time="6.48" classname="ds.listServersideFunctions.o_smk_check_results" name="check_results">
      <error type="error" message="could not find function &quot;ds.listServersideFunctions.o&quot; (@test-smk-ds.listServersideFunctions.o.R#59)">could not find function "ds.listServersideFunctions.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.listServersideFunctions.o\"", base::quote(ds.listServersideFunctions.o())) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.listServersideFunctions.o.R:59
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.look.o::smk" timestamp="2019-08-18 00:52:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.47">
    <testcase time="6.47" classname="ds.look.o_smk" name="simple_look">
      <error type="error" message="could not find function &quot;ds.look.o&quot; (@test-smk-ds.look.o.R#29)">could not find function "ds.look.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.look.o\"", base::quote(ds.look.o("lengthDS.o('D$LAB_TSC')"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.look.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.make.o::smk" timestamp="2019-08-18 00:52:07" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.55">
    <testcase time="6.55" classname="ds.make.o_smk" name="simple_make">
      <error type="error" message="could not find function &quot;ds.make.o&quot; (@test-smk-ds.make.o.R#29)">could not find function "ds.make.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.make.o\"", base::quote(ds.make.o("(D$LAB_TSC*D$LAB_TRIG*D$LAB_HDL)", 
       "maded.rand"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.make.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDet::smk" timestamp="2019-08-18 00:52:14" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.matrixDet_smk" name="simplest_ds.matrixDet">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrixDet.R#31)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix, 
       nrows.scalar = 3, ncols.scalar = 3))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixDet.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDet.report::smk" timestamp="2019-08-18 00:52:20" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.matrixDet.report_smk" name="simplest_ds.matrixDet.report">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrixDet.report.R#31)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix, 
       nrows.scalar = 3, ncols.scalar = 3))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixDet.report.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDiag::smk" timestamp="2019-08-18 00:52:27" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.matrixDiag_smk" name="simplest_ds.matrixDiag">
      <error type="error" message="could not find function &quot;ds.matrixDiag&quot; (@test-smk-ds.matrixDiag.R#31)">could not find function "ds.matrixDiag"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixDiag\"", base::quote(ds.matrixDiag(matrix, 
       aim = "clientside.vector.2.matrix", newobj = "matrix_diag"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixDiag.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDiag::smk" timestamp="2019-08-18 00:52:27" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.matrixDiag_smk" name="simplest_ds.matrixDiag">
      <error type="error" message="could not find function &quot;ds.matrixDiag&quot; (@test-smk-ds.matrixDiag.R#49)">could not find function "ds.matrixDiag"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrixDiag\"", base::quote(ds.matrixDiag(matrix, 
       aim = "clientside.vector.2.matrix"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixDiag.R:49
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixDimnames::smk" timestamp="2019-08-18 00:52:33" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.matrixDimnames_smk" name="simplest_ds.matrixDimnames">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrixDimnames.R#31)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix, 
       nrows.scalar = 3, ncols.scalar = 3))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixDimnames.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixInvert::smk" timestamp="2019-08-18 00:52:39" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.matrixInvert_smk" name="simplest_ds.matrixInvert">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrixInvert.R#31)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix, 
       nrows.scalar = 3, ncols.scalar = 3))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixInvert.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixMult::smk" timestamp="2019-08-18 00:52:46" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.matrixMult_smk" name="simplest_ds.matrixMult">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrixMult.R#32)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix1, 
       nrows.scalar = 3, ncols.scalar = 3, newobj = "mat1"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixMult.R:32
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrix::smk" timestamp="2019-08-18 00:52:52" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.49">
    <testcase time="6.49" classname="ds.matrix_smk" name="simplest_ds.matrix">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrix.R#31)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix, 
       nrows.scalar = 3, ncols.scalar = 4))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrix.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.matrixTranspose::smk" timestamp="2019-08-18 00:52:59" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.4">
    <testcase time="6.4" classname="ds.matrixTranspose_smk" name="simplest_ds.matrixTranspose">
      <error type="error" message="could not find function &quot;ds.matrix&quot; (@test-smk-ds.matrixTranspose.R#31)">could not find function "ds.matrix"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.matrix\"", base::quote(ds.matrix(mdata = matrix, 
       nrows.scalar = 3, ncols.scalar = 4))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.matrixTranspose.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk::type=combine" timestamp="2019-08-18 00:53:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.42">
    <testcase time="6.42" classname="ds.mean.o_smk_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-smk-ds.mean.o.R#29)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("mean.all.studies"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk::type=split" timestamp="2019-08-18 00:53:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-smk-ds.mean.o.R#65)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("mean.all.studies"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.o.R:65
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk::type=both" timestamp="2019-08-18 00:53:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0">
    <testcase time="0" classname="ds.mean.o_smk_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-smk-ds.mean.o.R#109)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("mean.all.studies"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.o.R:109
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk::type=combine,save.mean.Nvalid=TRUE" timestamp="2019-08-18 00:53:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_type_combine_save.mean.Nvalid_TRUE" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-smk-ds.mean.o.R#158)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("mean.all.studies"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.o.R:158
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk::type=split,save.mean.Nvalid=TRUE" timestamp="2019-08-18 00:53:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_type_split_save.mean.Nvalid_TRUE" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-smk-ds.mean.o.R#194)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("mean.all.studies"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.o.R:194
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk::type=both,save.mean.Nvalid=TRUE" timestamp="2019-08-18 00:53:05" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_type_both_save.mean.Nvalid_TRUE" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk-ds.mean.o.R#238)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(datasources = ds.test_env$connection.opal, 
       x = "D$LAB_TSC", type = "both", save.mean.Nvalid = TRUE))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.mean.o.R:238
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.meanSdGp::smk::type=split" timestamp="2019-08-18 00:53:12" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.5">
    <testcase time="6.5" classname="ds.meanSdGp_smk_type_split" name="meanSdGp_values_split_">
      <error type="error" message="could not find function &quot;ds.meanSdGp&quot; (@test-smk-ds.meanSdGp.R#29)">could not find function "ds.meanSdGp"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.meanSdGp\"", base::quote(ds.meanSdGp(x = "D$age.60", 
       y = "D$female", type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.meanSdGp.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.meanSdGp::smk::type=combine" timestamp="2019-08-18 00:53:12" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0">
    <testcase time="0" classname="ds.meanSdGp_smk_type_combine" name="meanSdGp_values_combine_">
      <error type="error" message="could not find function &quot;ds.meanSdGp&quot; (@test-smk-ds.meanSdGp.R#43)">could not find function "ds.meanSdGp"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.meanSdGp\"", base::quote(ds.meanSdGp(x = "D$age.60", 
       y = "D$female", type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.meanSdGp.R:43
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.meanSdGp::smk::type=both" timestamp="2019-08-18 00:53:12" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.meanSdGp_smk_type_both" name="meanSdGp_values_both_">
      <error type="error" message="could not find function &quot;ds.meanSdGp&quot; (@test-smk-ds.meanSdGp.R#57)">could not find function "ds.meanSdGp"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.meanSdGp\"", base::quote(ds.meanSdGp(x = "D$age.60", 
       y = "D$female", type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.meanSdGp.R:57
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.merge.o::smk" timestamp="2019-08-18 00:53:18" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.41">
    <testcase time="6.41" classname="ds.merge.o_smk" name="simple_test">
      <error type="error" message="could not find function &quot;ds.dataFrame.o&quot; (@test-smk-ds.merge.o.R#32)">could not find function "ds.dataFrame.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.dataFrame.o\"", base::quote(ds.dataFrame.o(x = spec_vectors_1, 
       newobj = "test_1_df"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.merge.o.R:32
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.message.o::smk" timestamp="2019-08-18 00:53:25" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.message.o_smk" name="request_message">
      <error type="error" message="could not find function &quot;ds.message.o&quot; (@test-smk-ds.message.o.R#29)">could not find function "ds.message.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.message.o\"", base::quote(ds.message.o("Test"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.message.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rbind.o::smk" timestamp="2019-08-18 00:53:31" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.rbind.o_smk" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rbind.o&quot; (@test-smk-ds.rbind.o.R#30)">could not find function "ds.rbind.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rbind.o\"", base::quote(ds.rbind.o(c("D$survtime", 
       "D$time.id", "D$female", "D$age.60"), newobj = "rbind_newobj"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.rbind.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rBinom.o::smk::simple test" timestamp="2019-08-18 00:53:37" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.rBinom.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rBinom.o&quot; (@test-smk-ds.rBinom.o.R#31)">could not find function "ds.rBinom.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rBinom.o\"", base::quote(ds.rBinom.o(samp.size = 50, 
       size = 50, prob = 0.25, newobj = "binom_dist", seed.as.integer = 27))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.rBinom.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.recodeValues.o::smk" timestamp="2019-08-18 00:53:44" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.recodeValues.o_smk" name="simple_test">
      <error type="error" message="could not find function &quot;ds.recodeValues.o&quot; (@test-smk-ds.recodeValues.o.R#30)">could not find function "ds.recodeValues.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.recodeValues.o\"", base::quote(ds.recodeValues.o("D$survtime", 
       values2replace.vector = c(0, 1), new.values.vector = c(-10, 10), newobj = "recodevalues_newobj"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.recodeValues.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.reShape.o::smk" timestamp="2019-08-18 00:53:50" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.47">
    <testcase time="6.47" classname="ds.reShape.o_smk" name="simplest_ds.reShape.o_wide">
      <error type="error" message="could not find function &quot;ds.reShape.o&quot; (@test-smk-ds.reShape.o.R#29)">could not find function "ds.reShape.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.reShape.o\"", base::quote(ds.reShape.o(data.name = "D", 
       v.names = "age.60", timevar.name = "time.id", idvar.name = "id", direction = "wide", 
       newobj = "reshape1_obj"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.reShape.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rm.o::smk" timestamp="2019-08-18 00:53:57" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.rm.o_smk" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rm.o&quot; (@test-smk-ds.rm.o.R#30)">could not find function "ds.rm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rm.o\"", base::quote(ds.rm.o("nonexistant_object"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.rm.o.R:30
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rNorm.o::smk::simple test" timestamp="2019-08-18 00:54:03" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.42">
    <testcase time="6.42" classname="ds.rNorm.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rNorm.o&quot; (@test-smk-ds.rNorm.o.R#31)">could not find function "ds.rNorm.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rNorm.o\"", base::quote(ds.rNorm.o(samp.size = 50, 
       mean = 10, sd = 5, newobj = "norm_dist", seed.as.integer = 27, force.output.to.k.decimal.places = 4))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.rNorm.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rPois.o::smk::simple test" timestamp="2019-08-18 00:54:10" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.45">
    <testcase time="6.45" classname="ds.rPois.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rPois.o&quot; (@test-smk-ds.rPois.o.R#31)">could not find function "ds.rPois.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rPois.o\"", base::quote(ds.rPois.o(samp.size = 50, 
       lambda = 1, newobj = "pois_dist", seed.as.integer = 27))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.rPois.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.rUnif.o::smk::simple test" timestamp="2019-08-18 00:54:16" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.44">
    <testcase time="6.44" classname="ds.rUnif.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.rUnif.o&quot; (@test-smk-ds.rUnif.o.R#31)">could not find function "ds.rUnif.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.rUnif.o\"", base::quote(ds.rUnif.o(samp.size = 50, 
       min = 0, max = 1, newobj = "unif_dist", seed.as.integer = 27, force.output.to.k.decimal.places = 4))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.rUnif.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.seq.o::smk" timestamp="2019-08-18 00:54:22" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.seq.o_smk" name="simplest_ds.seq.o">
      <error type="error" message="could not find function &quot;ds.seq.o&quot; (@test-smk-ds.seq.o.R#29)">could not find function "ds.seq.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.seq.o\"", base::quote(ds.seq.o("1", "1", "10", "D$LAB_TSC", 
       "obj"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.seq.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.setSeed.o::smk" timestamp="2019-08-18 00:54:29" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.46">
    <testcase time="6.46" classname="ds.setSeed.o_smk" name="basic_setSeed">
      <error type="error" message="could not find function &quot;ds.setSeed.o&quot; (@test-smk-ds.setSeed.o.R#29)">could not find function "ds.setSeed.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.setSeed.o\"", base::quote(ds.setSeed.o(1234))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.setSeed.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.table2D.o::smk" timestamp="2019-08-18 00:54:35" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.43">
    <testcase time="6.43" classname="ds.table2D.o_smk" name="simple_table2D">
      <error type="error" message="could not find function &quot;ds.table2D.o&quot; (@test-smk-ds.table2D.o.R#29)">could not find function "ds.table2D.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.table2D.o\"", base::quote(ds.table2D.o(x = "D$DIS_DIAB", 
       y = "D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.table2D.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.testObjExists.o::smk" timestamp="2019-08-18 00:54:42" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.49">
    <testcase time="6.49" classname="ds.testObjExists.o_smk" name="simple_testObjExists">
      <error type="error" message="could not find function &quot;ds.testObjExists.o&quot; (@test-smk-ds.testObjExists.o.R#29)">could not find function "ds.testObjExists.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.testObjExists.o\"", base::quote(ds.testObjExists.o("D"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.testObjExists.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.unList.o::smk::simple test" timestamp="2019-08-18 00:54:48" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.39">
    <testcase time="6.39" classname="ds.unList.o_smk_simple_test" name="simple_test">
      <error type="error" message="could not find function &quot;ds.asList.o&quot; (@test-smk-ds.unList.o.R#31)">could not find function "ds.asList.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.asList.o\"", base::quote(ds.asList.o(x.name = "D$GENDER"))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.unList.o.R:31
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o::smk::split" timestamp="2019-08-18 00:54:55" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.41">
    <testcase time="6.41" classname="ds.var.o_smk_split" name="simple_var_split">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-smk-ds.var.o.R#29)">could not find function "ds.var.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.var.o\"", base::quote(ds.var.o(x = "D$LAB_TSC", 
       type = "split", datasources = ds.test_env$connection.opal))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.var.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o::smk::combine" timestamp="2019-08-18 00:54:55" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.var.o_smk_combine" name="simple_var_combine">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-smk-ds.var.o.R#54)">could not find function "ds.var.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.var.o\"", base::quote(ds.var.o(x = "D$LAB_TSC", 
       type = "combine", datasources = ds.test_env$connection.opal))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.var.o.R:54
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.var.o::smk::both" timestamp="2019-08-18 00:54:55" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.var.o_smk_both" name="simple_var_both">
      <error type="error" message="could not find function &quot;ds.var.o&quot; (@test-smk-ds.var.o.R#71)">could not find function "ds.var.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.var.o\"", base::quote(ds.var.o(x = "D$LAB_TSC", 
       type = "both", datasources = ds.test_env$connection.opal))) at /home/vsts/work/1/s/tests/testthat/test-smk-ds.var.o.R:71
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="6.65">
    <testcase time="6.65" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#29)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_TSC", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:29
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#36)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_TSC", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:36
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#43)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_TSC", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:43
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#50)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_TRIG", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:50
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#57)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_TRIG", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:57
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#64)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_TRIG", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:64
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#71)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_HDL", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:71
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#78)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_HDL", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:78
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#85)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_HDL", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:85
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#92)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_GLUC_ADJUSTED", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:92
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#99)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_GLUC_ADJUSTED", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:99
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#106)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$LAB_GLUC_ADJUSTED", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:106
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#113)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$PM_BMI_CONTINUOUS", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:113
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#120)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$PM_BMI_CONTINUOUS", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:120
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#127)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$PM_BMI_CONTINUOUS", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:127
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#134)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_CVA", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:134
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#141)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_CVA", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:141
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#148)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_CVS", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:148
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#155)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$MEDI_LPD", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:155
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#162)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$MEDI_LPD", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:162
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#169)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$MEDI_LPD", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:169
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#176)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_DIAB", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:176
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#183)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_DIAB", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:183
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#190)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_DIAB", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:190
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#197)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_AMI", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:197
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#204)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_AMI", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:204
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#211)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$DIS_AMI", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:211
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#218)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$GENDER", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:218
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#225)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$GENDER", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:225
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#232)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$GENDER", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:232
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=combine" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_combine" name="mean_values_combine_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#239)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$PM_BMI_CATEGORICAL", 
       type = "combine"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:239
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=split" timestamp="2019-08-18 00:55:01" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_split" name="mean_values_split_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#246)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$PM_BMI_CATEGORICAL", 
       type = "split"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:246
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
  <testsuite name="ds.mean.o::smk_expt::type=both" timestamp="2019-08-18 00:55:02" hostname="fv-az679" tests="1" skipped="0" failures="0" errors="1" time="0.01">
    <testcase time="0.01" classname="ds.mean.o_smk_expt_type_both" name="mean_values_both_">
      <error type="error" message="could not find function &quot;ds.mean.o&quot; (@test-smk_expt-ds.mean.o.R#253)">could not find function "ds.mean.o"
1: .handleSimpleError(function (e) 
   {
       handled &lt;&lt;- TRUE
       test_error &lt;&lt;- e
       options(expressions = expressions_opt_new)
       on.exit(options(expressions = expressions_opt), add = TRUE)
       e$expectation_calls &lt;- frame_calls(11, 2)
       test_error &lt;&lt;- e
       register_expectation(e)
       e$handled &lt;- TRUE
       test_error &lt;&lt;- e
   }, "could not find function \"ds.mean.o\"", base::quote(ds.mean.o(x = "D$PM_BMI_CATEGORICAL", 
       type = "both"))) at /home/vsts/work/1/s/tests/testthat/test-smk_expt-ds.mean.o.R:253
2: eval(code, test_env)</error>
    </testcase>
  </testsuite>
</testsuites>
